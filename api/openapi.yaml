openapi: 3.0.3
info:
  contact:
    email: hello@opal.dev
    name: Opal Team
    url: https://www.opal.dev/
  description: Your Home For Developer Resources.
  title: Opal API
  version: "1.0"
servers:
- description: Production
  url: https://api.opal.dev/v1
paths:
  /events:
    get:
      description: Returns a list of `Event` objects.
      operationId: events
      parameters:
      - description: A start date filter for the events.
        example: 2021/11/01
        explode: true
        in: query
        name: start_date_filter
        required: false
        schema:
          type: string
        style: form
      - description: An end date filter for the events.
        example: 2021-11-12
        explode: true
        in: query
        name: end_date_filter
        required: false
        schema:
          type: string
        style: form
      - description: An actor filter for the events. Supply the ID of the actor.
        example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        explode: true
        in: query
        name: actor_filter
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: An object filter for the events. Supply the ID of the object.
        example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        explode: true
        in: query
        name: object_filter
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: An event type filter for the events.
        example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        explode: true
        in: query
        name: event_type_filter
        required: false
        schema:
          type: string
        style: form
      - description: The pagination cursor value.
        example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page. Default is 200.
        example: 200
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: One page worth of events with the appropriate filters applied.
      security:
      - BearerAuth: []
      tags:
      - events
  /groups:
    get:
      description: Returns a list of groups for your organization.
      operationId: getGroups
      parameters:
      - description: The pagination cursor value.
        example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page. Default is 200.
        example: 200
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupsList'
          description: One page worth groups associated with your organization.
      security:
      - BearerAuth: []
      tags:
      - groups
    put:
      description: Bulk updates a list of groups.
      operationId: updateGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupInfoList'
        description: Groups to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupInfoList'
          description: The resulting updated group infos.
      security:
      - BearerAuth: []
      tags:
      - groups
  /groups/{group_id}/message-channels:
    get:
      description: Gets the list of message channels attached to a group.
      operationId: get_group_message_channels
      parameters:
      - description: The ID of the group.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageChannelList'
          description: The message channels attached to the group.
      security:
      - BearerAuth: []
      tags:
      - groups
    put:
      description: Sets the list of message channels attached to a group.
      operationId: set_group_message_channels
      parameters:
      - description: The ID of the group.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageChannelIDList'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
                  format: uuid
                  type: string
                type: array
          description: The updated message channel IDs for the group.
      security:
      - BearerAuth: []
      tags:
      - groups
  /groups/{group_id}/reviewers:
    get:
      description: Gets the list of team/user IDs of the reviewers for a group.
      operationId: get_group_reviewers
      parameters:
      - description: The ID of the group.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
                  format: uuid
                  type: string
                type: array
          description: The IDs of teams/users that are reviewers for this group.
      security:
      - BearerAuth: []
      tags:
      - groups
    put:
      description: Sets the list of reviewers for a group.
      operationId: set_group_reviewers
      parameters:
      - description: The ID of the group.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewerIDList'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
                  format: uuid
                  type: string
                type: array
          description: The updated IDs of teams/users that are reviewers for this
            group
      security:
      - BearerAuth: []
      tags:
      - groups
  /resources:
    get:
      description: Returns a list of resources for your organization.
      operationId: getResources
      parameters:
      - description: The pagination cursor value.
        example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page. Default is 200.
        example: 200
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourcesList'
          description: One page worth resources associated with your organization.
      security:
      - BearerAuth: []
      tags:
      - resources
    put:
      description: Bulk updates a list of resources.
      operationId: updateResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceInfoList'
        description: Resources to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceInfoList'
          description: The resulting updated resource infos.
      security:
      - BearerAuth: []
      tags:
      - resources
  /resources/{resource_id}/message-channels:
    get:
      description: Gets the list of message channels attached to a resource.
      operationId: get_resource_message_channels
      parameters:
      - description: The ID of the resource.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageChannelList'
          description: The message channels attached to the resource.
      security:
      - BearerAuth: []
      tags:
      - resources
    put:
      description: Sets the list of message channels attached to a resource.
      operationId: set_resource_message_channels
      parameters:
      - description: The ID of the resource.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageChannelIDList'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
                  format: uuid
                  type: string
                type: array
          description: The updated message channel IDs for the resource.
      security:
      - BearerAuth: []
      tags:
      - resources
  /resources/{resource_id}/reviewers:
    get:
      description: Gets the list of team/user IDs of the reviewers for a resource.
      operationId: get_resource_reviewers
      parameters:
      - description: The ID of the resource.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
                  format: uuid
                  type: string
                type: array
          description: The IDs of teams that are reviewers for this resource.
      security:
      - BearerAuth: []
      tags:
      - resources
    put:
      description: Sets the list of reviewers for a resource.
      operationId: set_resource_reviewers
      parameters:
      - description: The ID of the resource.
        example: 4baf8423-db0a-4037-a4cf-f79c60cb67a5
        explode: false
        in: path
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewerIDList'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
                  format: uuid
                  type: string
                type: array
          description: The updated IDs of teams that are reviewers for this resource
      security:
      - BearerAuth: []
      tags:
      - resources
  /resource-users:
    get:
      description: Returns a list of `ResourceUser` objects.
      operationId: resource_users
      parameters:
      - description: The ID of the resource.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: true
        in: query
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The remote ID of the access level that you wish to query for
          the resource. If omitted, the default access level remote ID value (empty
          string) is used.
        example: arn:aws:iam::590304332660:role/AdministratorAccess
        explode: true
        in: query
        name: access_level_remote_id
        required: false
        schema:
          type: string
        style: form
      - description: The pagination cursor value.
        example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page. Default is 200.
        example: 200
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceUserList'
          description: One page worth of users with access to this resource.
      security:
      - BearerAuth: []
      tags:
      - resources
  /resource-user-access-status/{resource_id}/{user_id}:
    get:
      description: Get user's access status to a resource.
      operationId: resource_user_access_status_retrieve
      parameters:
      - description: The ID of the resource.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the user.
        example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The remote ID of the access level that you wish to query for
          the resource. If omitted, the default access level remote ID value (empty
          string) is used.
        example: arn:aws:iam::590304332660:role/AdministratorAccess
        explode: true
        in: query
        name: access_level_remote_id
        required: false
        schema:
          type: string
        style: form
      - description: The pagination cursor value.
        example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page. Default is 200.
        example: 200
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUserAccessStatus'
          description: The access status reflecting the user's access to the resource.
      security:
      - BearerAuth: []
      tags:
      - resources
  /sessions:
    get:
      description: Returns a list of `Session` objects.
      operationId: sessions
      parameters:
      - description: The ID of the resource.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: true
        in: query
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: The ID of the user you wish to query sessions for.
        example: 32acc112-21ff-4669-91c2-21e27683eaa1
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsList'
          description: The sessions associated with a resource.
      security:
      - BearerAuth: []
      tags:
      - sessions
  /user:
    get:
      description: Returns a `User` object.
      operationId: user
      parameters:
      - description: The user ID of the user.
        example: 32acc112-21ff-4669-91c2-21e27683eaa1
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The email of the user. If both user ID and email are provided,
          user ID will take precedence. If neither are provided, an error will occur.
        example: johndoe@domain.org
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The user object associated with the passed-in email or ID.
      security:
      - BearerAuth: []
      tags:
      - users
  /tag:
    get:
      description: Gets a tag with the given key and value.
      operationId: get_tag
      parameters:
      - description: The key of the tag to get.
        example: api-scope
        explode: false
        in: query
        name: tag_key
        required: true
        schema:
          type: string
        style: form
      - description: The value of the tag to get.
        example: production
        explode: false
        in: query
        name: tag_value
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The tag requested.
      security:
      - BearerAuth: []
      tags:
      - tags
    post:
      description: Creates a tag with the given key and value.
      operationId: create_tag
      parameters:
      - description: The key of the tag to create.
        example: api-scope
        explode: false
        in: query
        name: tag_key
        required: true
        schema:
          type: string
        style: form
      - description: The value of the tag to create.
        example: production
        explode: false
        in: query
        name: tag_value
        required: true
        schema:
          type: string
        style: form
      - description: The ID of the team that owns the tag.
        example: f92aa855-cea9-4814-b9d8-f2a60d3e4a06
        explode: false
        in: query
        name: tag_owner_team_id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The tag that was created.
      security:
      - BearerAuth: []
      tags:
      - tags
  /tags/{tag_id}/users/{user_id}:
    delete:
      description: Removes a tag from a user.
      operationId: remove_user_tag
      parameters:
      - description: The ID of the tag to remove.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the user to remove the tag from.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Tag removed from user successfully.
      security:
      - BearerAuth: []
      tags:
      - tags
    post:
      description: Applies a tag to a user.
      operationId: add_user_tag
      parameters:
      - description: The ID of the tag to apply.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the user to apply the tag to.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Tag applied to user successfully.
      security:
      - BearerAuth: []
      tags:
      - tags
  /tags/{tag_id}/groups/{group_id}:
    delete:
      description: Removes a tag from a group.
      operationId: remove_group_tag
      parameters:
      - description: The ID of the tag to remove.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the group to remove the tag from.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Tag removed from group successfully.
      security:
      - BearerAuth: []
      tags:
      - tags
    post:
      description: Applies a tag to a group.
      operationId: add_group_tag
      parameters:
      - description: The ID of the tag to apply.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the group to apply the tag to.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Tag applied to group successfully.
      security:
      - BearerAuth: []
      tags:
      - tags
  /tags/{tag_id}/resources/{resource_id}:
    delete:
      description: Removes a tag from a resource.
      operationId: remove_resource_tag
      parameters:
      - description: The ID of the tag to remove.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the resource to remove the tag from.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Tag removed from resource successfully.
      security:
      - BearerAuth: []
      tags:
      - tags
    post:
      description: Applies a tag to a resource.
      operationId: add_resource_tag
      parameters:
      - description: The ID of the tag to apply.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the resource to apply the tag to.
        example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        explode: false
        in: path
        name: resource_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Tag applied to resource successfully.
      security:
      - BearerAuth: []
      tags:
      - tags
components:
  schemas:
    EntityTypeEnum:
      description: The type of an entity.
      enum:
      - GROUP
      - RESOURCE
      - USER
      example: GROUP
      type: string
    Event:
      description: |-
        # Event Object
        ### Description
        The `Event` object is used to represent an event.

        ### Usage Example
        Fetch from the `LIST Events` endpoint.
      example:
        event_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        actor_user_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        created_at: 2022-01-23T04:56:07Z
        event_type: USERS_CREATED
      properties:
        event_id:
          description: The ID of the event.
          example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          format: uuid
          type: string
        actor_user_id:
          description: The ID of the actor user.
          example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          format: uuid
          type: string
        event_type:
          description: The event type.
          example: USERS_CREATED
          type: string
        created_at:
          description: The day and time the event was created.
          example: 2022-01-23T04:56:07Z
          format: date-time
          type: string
      required:
      - actor_user_id
      - created_at
      - event_id
      - event_type
      type: object
    PaginatedEventList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - event_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          actor_user_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          created_at: 2022-01-23T04:56:07Z
          event_type: USERS_CREATED
        - event_id: 7646aa9a-e2ee-4eb5-8c62-91f29038a373
          actor_user_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          created_at: 2022-02-03T12:33:02Z
          event_type: USER_TEAM_UPDATED
      properties:
        next:
          description: The cursor with which to continue pagination if additional
            result pages exist.
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          description: The cursor used to obtain the current result page.
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Event'
          type: array
      type: object
    PaginatedResourceUserList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - full_name: Jake Barnes
          user_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          resource_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          expiration_date: 2022-01-23T04:56:07Z
          email: jake@company.dev
        - full_name: Brett Ashley
          user_id: 7646aa9a-e2ee-4eb5-8c62-91f29038a373
          resource_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          expiration_date: 2022-02-03T12:33:02Z
          email: brett@company.dev
      properties:
        next:
          description: The cursor with which to continue pagination if additional
            result pages exist.
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          description: The cursor used to obtain the current result page.
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/ResourceUser'
          type: array
      type: object
    ResourceAccessLevel:
      description: |-
        # Access Level Object
        ### Description
        The `ResourceAccessLevel` object is used to represent the level of access that a user has to a resource or a resource has to a group. The "default" access
        level is a `ResourceAccessLevel` object whose fields are all empty strings.

        ### Usage Example
        View the `ResourceAccessLevel` of a resource/user or resource/group pair to see the level of access granted to the resource.
      example:
        access_level_name: AdminRole
        access_level_remote_id: arn:aws:iam::590304332660:role/AdministratorAccess
      properties:
        access_level_name:
          description: The human-readable name of the access level.
          example: AdminRole
          type: string
        access_level_remote_id:
          description: The machine-readable identifier of the access level.
          example: arn:aws:iam::590304332660:role/AdministratorAccess
          type: string
      required:
      - access_level_name
      - access_level_remote_id
      type: object
    ResourceUserAccessStatus:
      description: |-
        # AccessStatus Object
        ### Description
        The `AccessStatus` object is used to represent the user's access to the resource.

        ### Usage Example
        View the `AccessStatus` for a resource/user pair to determine if the user has access to the resource.
      example:
        user_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        resource_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        expiration_date: 2022-01-23T04:56:07Z
        status: AUTHORIZED
      properties:
        resource_id:
          description: The ID of the resource.
          example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          format: uuid
          type: string
        user_id:
          description: The ID of the user.
          example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          format: uuid
          type: string
        access_level:
          $ref: '#/components/schemas/ResourceAccessLevel'
        status:
          $ref: '#/components/schemas/ResourceUserAccessStatusEnum'
        expiration_date:
          description: The day and time the user's access will expire.
          example: 2022-01-23T04:56:07Z
          format: date-time
          nullable: true
          type: string
      required:
      - expiration_date
      - resource_id
      - status
      - user_id
      type: object
    ResourceUserAccessStatusEnum:
      description: The status of the user's access to the resource.
      enum:
      - UNAUTHORIZED
      - REQUESTED
      - AUTHORIZED
      example: AUTHORIZED
      type: string
    ResourceUser:
      description: |-
        # Resource User Object
        ### Description
        The `ResourceUser` object is used to represent a user with access to a resource.

        ### Usage Example
        Fetch from the `LIST ResourceUsers` endpoint.
      example:
        full_name: Jake Barnes
        user_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        resource_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        expiration_date: 2022-01-23T04:56:07Z
        email: jake@company.dev
      properties:
        resource_id:
          description: The ID of the resource.
          example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          format: uuid
          type: string
        user_id:
          description: The ID of the user.
          example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          format: uuid
          type: string
        access_level:
          $ref: '#/components/schemas/ResourceAccessLevel'
        full_name:
          description: The user's full name.
          example: Jake Barnes
          type: string
        email:
          description: The user's email.
          example: jake@company.dev
          format: email
          type: string
        expiration_date:
          description: The day and time the user's access will expire.
          example: 2022-01-23T04:56:07Z
          format: date-time
          nullable: true
          type: string
      required:
      - access_level
      - email
      - expiration_date
      - full_name
      - resource_id
      - user_id
      type: object
    SessionsList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - connection_id: h0z968412-2451-4bbd-42h4-057l715d917m
          user_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          resource_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          expiration_date: 2022-01-23T04:56:07Z
        - connection_id: 6e6b5597-bd36-4f4c-a629-01e3fa791932
          user_id: b031c922-b84f-4424-9f4f-c49c05871bfe
          resource_id: 77eb1ab7-2c27-4fc4-afdb-137e1265cddd
          expiration_date: 2022-03-12T07:22:18Z
      properties:
        next:
          description: The cursor with which to continue pagination if additional
            result pages exist.
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          description: The cursor used to obtain the current result page.
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Session'
          type: array
      type: object
    Session:
      description: |-
        # Session Object
        ### Description
        The `Session` object is used to represent an access session. Some resources can be accessed temporarily via a time-bounded session.

        ### Usage Example
        Fetch from the `LIST Sessions` endpoint.
      example:
        connection_id: h0z968412-2451-4bbd-42h4-057l715d917m
        user_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        resource_id: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        expiration_date: 2022-01-23T04:56:07Z
      properties:
        connection_id:
          description: The ID of the connection.
          format: uuid
          type: string
        user_id:
          description: The ID of the user.
          example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          format: uuid
          type: string
        resource_id:
          description: The ID of the resource.
          example: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          format: uuid
          type: string
        access_level:
          $ref: '#/components/schemas/ResourceAccessLevel'
        expiration_date:
          description: The day and time the user's access will expire.
          example: 2022-01-23T04:56:07Z
          format: date-time
          nullable: false
          type: string
      required:
      - access_level
      - connection_id
      - expiration_date
      - resource_id
      - user_id
      type: object
    UsersList:
      example:
        results:
        - user_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          email: 1b978423-db0a-4037-a4cf-f79c60cb67b3
          full_name: John Doe
          team_id: 659eeec6-7d77-42c1-add2-b41243c618fd
          position: Senior Engineer
        - user_id: e8581682-04f7-473a-a419-472f0fb26d46
          email: 186511e5-5b5a-4ad7-a4ad-b6c8694a544a
          full_name: Jane Smith
          team_id: 02cc7531-ebce-4cc1-88a3-35ce8bfadf39
          position: Product Marketing Lead
      properties:
        results:
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    User:
      description: |-
        # User Object
        ### Description
        The `User` object is used to represent a user.

        ### Usage Example
        Fetch from the `LIST Sessions` endpoint.
      example:
        user_id: 29827fb8-f2dd-4e80-9576-28e31e9934ac
        email: 1b978423-db0a-4037-a4cf-f79c60cb67b3
        full_name: John Doe
        team_id: 659eeec6-7d77-42c1-add2-b41243c618fd
        position: Engineer
      properties:
        user_id:
          description: The ID of the user.
          format: uuid
          type: string
        email:
          description: The email of the user.
          example: 29827fb8-f2dd-4e80-9576-28e31e9934ac
          format: uuid
          type: string
        full_name:
          description: The full name of the user.
          example: John Doe
          type: string
        team_id:
          description: The ID of the user's team.
          example: 659eeec6-7d77-42c1-add2-b41243c618fd
          format: uuid
          nullable: true
          type: string
        position:
          description: The user's position.
          example: Senior Engineer
          type: string
      required:
      - email
      - full_name
      - position
      - team_id
      - user_id
      type: object
    PaginatedGroupsList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - group_id: f454d283-ca87-4a8a-bdbb-df212eca5353
          description: This group represents Active Directory group "Payments Production
            Admin". We use this AD group to facilitate staging deployments and qualifying
            new releases.
          owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
          visibility: Global
          max_duration: 120
          require_manager_approval: false
          require_support_ticket: false
        - group_id: 99d0b81d-14be-4cf6-bd27-348b4af1d11b
          description: Manages the Integrations Team on-call privileged resources.
            This group is automatically synced with the on-call rotation defined in
            PagerDuty.
          owner_team_id: 4220bc12-ab8a-4b5d-be7b-f6bbcf9159f3
          visibility: Team
          max_duration: 360
          require_manager_approval: false
          require_support_ticket: true
      properties:
        next:
          description: The cursor with which to continue pagination if additional
            result pages exist.
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          description: The cursor used to obtain the current result page.
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Group'
          type: array
      required:
      - results
      type: object
    Group:
      description: |-
        # Group Object
        ### Description
        The `Group` object is used to represent a group.

        ### Usage Example
        Update from the `UPDATE Groups` endpoint.
      example:
        group_id: f454d283-ca87-4a8a-bdbb-df212eca5353
        description: This group represents Active Directory group "Payments Production
          Admin". We use this AD group to facilitate staging deployments and qualifying
          new releases.
        owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
        visibility: Global
        max_duration: 120
        require_manager_approval: false
        require_support_ticket: false
      properties:
        group_id:
          description: The ID of the group.
          example: f454d283-ca87-4a8a-bdbb-df212eca5353
          format: uuid
          type: string
        name:
          description: The name of the group.
          example: API Group
          type: string
        description:
          description: A description of the group.
          example: This group represents Active Directory group "Payments Production
            Admin". We use this AD group to facilitate staging deployments and qualifying
            new releases.
          type: string
        owner_team_id:
          description: The ID of the owning team of the group.
          example: 7c86c85d-0651-43e2-a748-d69d658418e8
          format: uuid
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_duration:
          description: The maximum duration access to the group can be requested for
            (in minutes).
          example: 120
          type: integer
        require_manager_approval:
          description: A bool representing whether or not access requests to the group
            require manager approval.
          example: false
          type: boolean
        require_support_ticket:
          description: A bool representing whether or not access requests to the group
            require a support ticket.
          example: false
          type: boolean
      required:
      - group_id
      type: object
    UpdateGroupInfoList:
      example:
        groups:
        - group_id: f454d283-ca87-4a8a-bdbb-df212eca5353
          description: This group represents Active Directory group "Payments Production
            Admin". We use this AD group to facilitate staging deployments and qualifying
            new releases.
          owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
          visibility: Global
          max_duration: 120
          require_manager_approval: false
          require_support_ticket: false
        - group_id: 99d0b81d-14be-4cf6-bd27-348b4af1d11b
          description: Manages the Integrations Team on-call privileged resources.
            This group is automatically synced with the on-call rotation defined in
            PagerDuty.
          owner_team_id: 4220bc12-ab8a-4b5d-be7b-f6bbcf9159f3
          visibility: Team
          max_duration: 360
          require_manager_approval: false
          require_support_ticket: true
      properties:
        groups:
          description: A list of groups with information to update.
          items:
            $ref: '#/components/schemas/UpdateGroupInfo'
          type: array
      required:
      - groups
      type: object
    UpdateGroupInfo:
      description: |-
        # UpdateGroupInfo Object
        ### Description
        The `UpdateGroupInfo` object is used as an input to the UpdateGroup API.
      example:
        group_id: f454d283-ca87-4a8a-bdbb-df212eca5353
        description: This group represents Active Directory group "Payments Production
          Admin". We use this AD group to facilitate staging deployments and qualifying
          new releases.
        owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
        visibility: Global
        max_duration: 120
        require_manager_approval: false
        require_support_ticket: false
      properties:
        group_id:
          description: The ID of the group.
          example: f454d283-ca87-4a8a-bdbb-df212eca5353
          format: uuid
          type: string
        description:
          description: A description of the group.
          example: This group represents Active Directory group "Payments Production
            Admin". We use this AD group to facilitate staging deployments and qualifying
            new releases.
          type: string
        owner_team_id:
          description: The ID of the owning team of the group. Use empty string to
            remove owner.
          example: 7c86c85d-0651-43e2-a748-d69d658418e8
          format: uuid
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_duration:
          description: The maximum duration access to the group can be requested for
            (in minutes). Use 0 to set to indefinite.
          example: 120
          type: integer
        require_manager_approval:
          description: A bool representing whether or not access requests to the group
            require manager approval.
          example: false
          type: boolean
        require_support_ticket:
          description: A bool representing whether or not access requests to the group
            require a support ticket.
          example: false
          type: boolean
      required:
      - group_id
      type: object
    VisibilityEnum:
      description: The visibility level of the entity.
      enum:
      - GLOBAL
      - TEAM
      example: GLOBAL
      type: string
    MessageChannelList:
      example:
        channels:
        - message_channel_id: 7870617d-e72a-47f5-a84c-693817ab4567
          third_party_provider: SLACK
          remote_id: C03FJR97276
          name: api-team-audit-channel
          message_channel_type: AUDIT
          is_private: false
        - message_channel_id: 1520617d-e72a-47f5-a84c-693817ab48ad2
          third_party_provider: SLACK
          remote_id: A4FJR97365D
          name: api-team-monitor-channel
          message_channel_type: MONITOR
          is_private: false
      properties:
        channels:
          items:
            $ref: '#/components/schemas/MessageChannel'
          type: array
      required:
      - channels
      type: object
    MessageChannelIDList:
      description: A list of message channel IDs.
      example:
        message_channel_ids:
        - 7870617d-e72a-47f5-a84c-693817ab4567
        - 1520617d-e72a-47f5-a84c-693817ab48ad2
      properties:
        message_channel_ids:
          items:
            format: uuid
            type: string
          type: array
      required:
      - message_channel_ids
      type: object
    ReviewerIDList:
      description: A list of reviewer IDs.
      example:
        reviewer_ids:
        - 7870617d-e72a-47f5-a84c-693817ab4567
        - 1520617d-e72a-47f5-a84c-693817ab48ad2
      properties:
        reviewer_ids:
          items:
            format: uuid
            type: string
          type: array
      required:
      - reviewer_ids
      type: object
    MessageChannel:
      description: |-
        # MessageChannel Object
        ### Description
        The `MessageChannel` object is used to represent a message channel.

        ### Usage Example
        Update a groups message channel from the `UPDATE Groups` endpoint.
      example:
        message_channel_id: 6670617d-e72a-47f5-a84c-693817ab4860
        third_party_provider: SLACK
        remote_id: C03FJR97276
        name: api-team-audit-channel
        message_channel_type: AUDIT
        is_private: false
      properties:
        message_channel_id:
          description: The ID of the message channel.
          example: 6670617d-e72a-47f5-a84c-693817ab4860
          format: uuid
          type: string
        third_party_provider:
          $ref: '#/components/schemas/MessageChannelProviderEnum'
        remote_id:
          description: The remote ID of the message channel
          example: C03FJR97276
          type: string
        name:
          description: The name of the message channel.
          example: api-team-audit-channel
          type: string
        message_channel_type:
          $ref: '#/components/schemas/MessageChannelTypeEnum'
        is_private:
          description: A bool representing whether or not the message channel is private.
          example: false
          type: boolean
      required:
      - message_channel_id
      type: object
    MessageChannelTypeEnum:
      description: The type of the message channel.
      enum:
      - AUDIT
      - REVIEWER
      - MONITOR
      example: AUDIT
      type: string
    MessageChannelProviderEnum:
      description: The third party provider of the message channel.
      enum:
      - SLACK
      example: SLACK
      type: string
    PaginatedResourcesList:
      example:
        next: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
        - resource_id: f454d283-ca67-4a8a-bdbb-df212eca5353
          description: This resource represents AWS IAM role "SupportUser".
          owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
          visibility: Global
          max_duration: 120
          require_manager_approval: false
          require_support_ticket: false
        - resource_id: 99d0b81d-14be-4cf6-bd27-348b4af1d11b
          description: This resource represents GCP project "app-demo".
          owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
          visibility: Team
          max_duration: 360
          require_manager_approval: false
          require_support_ticket: true
      properties:
        next:
          description: The cursor with which to continue pagination if additional
            result pages exist.
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
          nullable: true
          type: string
        previous:
          description: The cursor used to obtain the current result page.
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      required:
      - results
      type: object
    Resource:
      description: |-
        # Resource Object
        ### Description
        The `Resource` object is used to represent a resource.

        ### Usage Example
        Update from the `UPDATE Resources` endpoint.
      example:
        resource_id: f454d283-ca87-4a8a-bdbb-df212eca5353
        description: This resource represents AWS IAM role "SupportUser".
        owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
        visibility: Global
        max_duration: 120
        require_manager_approval: false
        require_support_ticket: false
      properties:
        resource_id:
          description: The ID of the resource.
          example: f454d283-ca87-4a8a-bdbb-df212eca5353
          format: uuid
          type: string
        name:
          description: The name of the resource.
          example: mongo-db-prod
          type: string
        description:
          description: A description of the resource.
          example: This resource represents AWS IAM role "SupportUser".
          type: string
        owner_team_id:
          description: The ID of the owning team of the resource.
          example: 7c86c85d-0651-43e2-a748-d69d658418e8
          format: uuid
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_duration:
          description: The maximum duration access to the resource can be requested
            for (in minutes).
          example: 120
          type: integer
        require_manager_approval:
          description: A bool representing whether or not access requests to the resource
            require manager approval.
          example: false
          type: boolean
        require_support_ticket:
          description: A bool representing whether or not access requests to the resource
            require a support ticket.
          example: false
          type: boolean
      required:
      - resource_id
      type: object
    UpdateResourceInfoList:
      example:
        resources:
        - resource_id: f454d283-ca87-4a8a-bdbb-df212eca5353
          description: This resource represents AWS IAM role "SupportUser".
          owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
          visibility: Global
          max_duration: 120
          require_manager_approval: false
          require_support_ticket: false
        - resource_id: 99d0b81d-14be-4cf6-bd27-348b4af1d11b
          description: This resource represents GCP project "app-demo".
          owner_team_id: 4220bc12-ab8a-4b5d-be7b-f6bbcf9159f3
          visibility: Team
          max_duration: 360
          require_manager_approval: false
          require_support_ticket: true
      properties:
        resources:
          description: A list of resources with information to update.
          items:
            $ref: '#/components/schemas/UpdateResourceInfo'
          type: array
      required:
      - resources
      type: object
    UpdateResourceInfo:
      description: |-
        # UpdateResourceInfo Object
        ### Description
        The `UpdateResourceInfo` object is used as an input to the UpdateResource API.
      example:
        resource_id: f454d283-ca87-4a8a-bdbb-df212eca5353
        description: This resource represents AWS IAM role "SupportUser".
        owner_team_id: 7c86c85d-0651-43e2-a748-d69d658418e8
        visibility: Global
        max_duration: 120
        require_manager_approval: false
        require_support_ticket: false
      properties:
        resource_id:
          description: The ID of the resource.
          example: f454d283-ca87-4a8a-bdbb-df212eca5353
          format: uuid
          type: string
        description:
          description: A description of the resource.
          example: This resource represents AWS IAM role "SupportUser".
          type: string
        owner_team_id:
          description: The ID of the owning team of the resource.
          example: 7c86c85d-0651-43e2-a748-d69d658418e8
          format: uuid
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_duration:
          description: The maximum duration access to the resource can be requested
            for (in minutes). Use 0 to set to indefinite.
          example: 120
          type: integer
        require_manager_approval:
          description: A bool representing whether or not access requests to the resource
            require manager approval.
          example: false
          type: boolean
        require_support_ticket:
          description: A bool representing whether or not access requests to the resource
            require a support ticket.
          example: false
          type: boolean
      required:
      - resource_id
      type: object
    Tag:
      description: |-
        # Tag Object
        ### Description
        The `Tag` object is used to represent a tag.

        ### Usage Example
        Get tags from the `GET Tag` endpoint.
      example:
        tag_id: f290a738-5f9f-43c2-ad67-fa31ff0eb946
        created_at: 2022-01-23T04:56:07Z
        updated_at: 2022-02-23T01:34:07Z
        user_creator_id: d4a7d928-783e-4599-8ec6-088d635a5bcc
        owner_team_id: bfb518b1-3f5b-4e3b-8eb8-3b3fabd4ea2b
        key: database-name
        value: redis_db
      properties:
        tag_id:
          description: The ID of the tag.
          example: f290a738-5f9f-43c2-ad67-fa31ff0eb946
          format: uuid
          type: string
        created_at:
          description: The date the tag was created.
          example: 2022-01-23T04:56:07Z
          format: date-time
          type: string
        updated_at:
          description: The date the tag was last updated.
          example: 2022-02-23T01:34:07Z
          format: date-time
          type: string
        user_creator_id:
          description: The ID of the user that created the tag.
          example: d4a7d928-783e-4599-8ec6-088d635a5bcc
          format: uuid
          type: string
        owner_team_id:
          description: The ID of the team that owns the tag.
          example: bfb518b1-3f5b-4e3b-8eb8-3b3fabd4ea2b
          format: uuid
          type: string
        key:
          description: The key of the tag.
          example: database-name
          type: string
        value:
          description: The value of the tag.
          example: redis_db
          type: string
      required:
      - tag_id
      type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
