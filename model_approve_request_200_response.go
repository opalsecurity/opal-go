/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// checks if the ApproveRequest200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApproveRequest200Response{}

// ApproveRequest200Response struct for ApproveRequest200Response
type ApproveRequest200Response struct {
	Request *Request `json:"request,omitempty"`
}

// NewApproveRequest200Response instantiates a new ApproveRequest200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproveRequest200Response() *ApproveRequest200Response {
	this := ApproveRequest200Response{}
	return &this
}

// NewApproveRequest200ResponseWithDefaults instantiates a new ApproveRequest200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproveRequest200ResponseWithDefaults() *ApproveRequest200Response {
	this := ApproveRequest200Response{}
	return &this
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ApproveRequest200Response) GetRequest() Request {
	if o == nil || IsNil(o.Request) {
		var ret Request
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApproveRequest200Response) GetRequestOk() (*Request, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ApproveRequest200Response) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given Request and assigns it to the Request field.
func (o *ApproveRequest200Response) SetRequest(v Request) {
	o.Request = &v
}

func (o ApproveRequest200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApproveRequest200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	return toSerialize, nil
}

type NullableApproveRequest200Response struct {
	value *ApproveRequest200Response
	isSet bool
}

func (v NullableApproveRequest200Response) Get() *ApproveRequest200Response {
	return v.value
}

func (v *NullableApproveRequest200Response) Set(val *ApproveRequest200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApproveRequest200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApproveRequest200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproveRequest200Response(val *ApproveRequest200Response) *NullableApproveRequest200Response {
	return &NullableApproveRequest200Response{value: val, isSet: true}
}

func (v NullableApproveRequest200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproveRequest200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


