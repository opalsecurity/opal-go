/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// ReviewerIDList A list of reviewer IDs.
type ReviewerIDList struct {
	ReviewerIds []string `json:"reviewer_ids"`
}

// NewReviewerIDList instantiates a new ReviewerIDList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReviewerIDList(reviewerIds []string) *ReviewerIDList {
	this := ReviewerIDList{}
	this.ReviewerIds = reviewerIds
	return &this
}

// NewReviewerIDListWithDefaults instantiates a new ReviewerIDList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReviewerIDListWithDefaults() *ReviewerIDList {
	this := ReviewerIDList{}
	return &this
}

// GetReviewerIds returns the ReviewerIds field value
func (o *ReviewerIDList) GetReviewerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ReviewerIds
}

// GetReviewerIdsOk returns a tuple with the ReviewerIds field value
// and a boolean to check if the value has been set.
func (o *ReviewerIDList) GetReviewerIdsOk() ([]string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReviewerIds, true
}

// SetReviewerIds sets field value
func (o *ReviewerIDList) SetReviewerIds(v []string) {
	o.ReviewerIds = v
}

func (o ReviewerIDList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["reviewer_ids"] = o.ReviewerIds
	}
	return json.Marshal(toSerialize)
}

type NullableReviewerIDList struct {
	value *ReviewerIDList
	isSet bool
}

func (v NullableReviewerIDList) Get() *ReviewerIDList {
	return v.value
}

func (v *NullableReviewerIDList) Set(val *ReviewerIDList) {
	v.value = val
	v.isSet = true
}

func (v NullableReviewerIDList) IsSet() bool {
	return v.isSet
}

func (v *NullableReviewerIDList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReviewerIDList(val *ReviewerIDList) *NullableReviewerIDList {
	return &NullableReviewerIDList{value: val, isSet: true}
}

func (v NullableReviewerIDList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReviewerIDList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


