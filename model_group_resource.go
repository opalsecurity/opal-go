/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// GroupResource # GroupResource Object ### Description The `GroupResource` object is used to represent a relationship between a group and a resource.
type GroupResource struct {
	// The ID of the group.
	GroupId string `json:"group_id"`
	// The ID of the resource.
	ResourceId string `json:"resource_id"`
	AccessLevel ResourceAccessLevel `json:"access_level"`
}

// NewGroupResource instantiates a new GroupResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupResource(groupId string, resourceId string, accessLevel ResourceAccessLevel) *GroupResource {
	this := GroupResource{}
	this.GroupId = groupId
	this.ResourceId = resourceId
	this.AccessLevel = accessLevel
	return &this
}

// NewGroupResourceWithDefaults instantiates a new GroupResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupResourceWithDefaults() *GroupResource {
	this := GroupResource{}
	return &this
}

// GetGroupId returns the GroupId field value
func (o *GroupResource) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *GroupResource) GetGroupIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *GroupResource) SetGroupId(v string) {
	o.GroupId = v
}

// GetResourceId returns the ResourceId field value
func (o *GroupResource) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *GroupResource) GetResourceIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *GroupResource) SetResourceId(v string) {
	o.ResourceId = v
}

// GetAccessLevel returns the AccessLevel field value
func (o *GroupResource) GetAccessLevel() ResourceAccessLevel {
	if o == nil {
		var ret ResourceAccessLevel
		return ret
	}

	return o.AccessLevel
}

// GetAccessLevelOk returns a tuple with the AccessLevel field value
// and a boolean to check if the value has been set.
func (o *GroupResource) GetAccessLevelOk() (*ResourceAccessLevel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessLevel, true
}

// SetAccessLevel sets field value
func (o *GroupResource) SetAccessLevel(v ResourceAccessLevel) {
	o.AccessLevel = v
}

func (o GroupResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group_id"] = o.GroupId
	}
	if true {
		toSerialize["resource_id"] = o.ResourceId
	}
	if true {
		toSerialize["access_level"] = o.AccessLevel
	}
	return json.Marshal(toSerialize)
}

type NullableGroupResource struct {
	value *GroupResource
	isSet bool
}

func (v NullableGroupResource) Get() *GroupResource {
	return v.value
}

func (v *NullableGroupResource) Set(val *GroupResource) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupResource) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupResource(val *GroupResource) *NullableGroupResource {
	return &NullableGroupResource{value: val, isSet: true}
}

func (v NullableGroupResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


