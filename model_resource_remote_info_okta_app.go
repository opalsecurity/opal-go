/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// ResourceRemoteInfoOktaApp Remote info for Okta directory app.
type ResourceRemoteInfoOktaApp struct {
	// The id of the app.
	AppId string `json:"app_id"`
}

// NewResourceRemoteInfoOktaApp instantiates a new ResourceRemoteInfoOktaApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRemoteInfoOktaApp(appId string) *ResourceRemoteInfoOktaApp {
	this := ResourceRemoteInfoOktaApp{}
	this.AppId = appId
	return &this
}

// NewResourceRemoteInfoOktaAppWithDefaults instantiates a new ResourceRemoteInfoOktaApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRemoteInfoOktaAppWithDefaults() *ResourceRemoteInfoOktaApp {
	this := ResourceRemoteInfoOktaApp{}
	return &this
}

// GetAppId returns the AppId field value
func (o *ResourceRemoteInfoOktaApp) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *ResourceRemoteInfoOktaApp) GetAppIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *ResourceRemoteInfoOktaApp) SetAppId(v string) {
	o.AppId = v
}

func (o ResourceRemoteInfoOktaApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	return json.Marshal(toSerialize)
}

type NullableResourceRemoteInfoOktaApp struct {
	value *ResourceRemoteInfoOktaApp
	isSet bool
}

func (v NullableResourceRemoteInfoOktaApp) Get() *ResourceRemoteInfoOktaApp {
	return v.value
}

func (v *NullableResourceRemoteInfoOktaApp) Set(val *ResourceRemoteInfoOktaApp) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRemoteInfoOktaApp) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRemoteInfoOktaApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRemoteInfoOktaApp(val *ResourceRemoteInfoOktaApp) *NullableResourceRemoteInfoOktaApp {
	return &NullableResourceRemoteInfoOktaApp{value: val, isSet: true}
}

func (v NullableResourceRemoteInfoOktaApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRemoteInfoOktaApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


