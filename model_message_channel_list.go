/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MessageChannelList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageChannelList{}

// MessageChannelList struct for MessageChannelList
type MessageChannelList struct {
	Channels []MessageChannel `json:"channels"`
}

type _MessageChannelList MessageChannelList

// NewMessageChannelList instantiates a new MessageChannelList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageChannelList(channels []MessageChannel) *MessageChannelList {
	this := MessageChannelList{}
	this.Channels = channels
	return &this
}

// NewMessageChannelListWithDefaults instantiates a new MessageChannelList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageChannelListWithDefaults() *MessageChannelList {
	this := MessageChannelList{}
	return &this
}

// GetChannels returns the Channels field value
func (o *MessageChannelList) GetChannels() []MessageChannel {
	if o == nil {
		var ret []MessageChannel
		return ret
	}

	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value
// and a boolean to check if the value has been set.
func (o *MessageChannelList) GetChannelsOk() ([]MessageChannel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channels, true
}

// SetChannels sets field value
func (o *MessageChannelList) SetChannels(v []MessageChannel) {
	o.Channels = v
}

func (o MessageChannelList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageChannelList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channels"] = o.Channels
	return toSerialize, nil
}

func (o *MessageChannelList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"channels",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageChannelList := _MessageChannelList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMessageChannelList)

	if err != nil {
		return err
	}

	*o = MessageChannelList(varMessageChannelList)

	return err
}

type NullableMessageChannelList struct {
	value *MessageChannelList
	isSet bool
}

func (v NullableMessageChannelList) Get() *MessageChannelList {
	return v.value
}

func (v *NullableMessageChannelList) Set(val *MessageChannelList) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageChannelList) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageChannelList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageChannelList(val *MessageChannelList) *NullableMessageChannelList {
	return &NullableMessageChannelList{value: val, isSet: true}
}

func (v NullableMessageChannelList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageChannelList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


