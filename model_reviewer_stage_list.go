/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// checks if the ReviewerStageList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReviewerStageList{}

// ReviewerStageList struct for ReviewerStageList
type ReviewerStageList struct {
	// A list of reviewer stages.
	Stages []ReviewerStage `json:"stages"`
}

// NewReviewerStageList instantiates a new ReviewerStageList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReviewerStageList(stages []ReviewerStage) *ReviewerStageList {
	this := ReviewerStageList{}
	this.Stages = stages
	return &this
}

// NewReviewerStageListWithDefaults instantiates a new ReviewerStageList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReviewerStageListWithDefaults() *ReviewerStageList {
	this := ReviewerStageList{}
	return &this
}

// GetStages returns the Stages field value
func (o *ReviewerStageList) GetStages() []ReviewerStage {
	if o == nil {
		var ret []ReviewerStage
		return ret
	}

	return o.Stages
}

// GetStagesOk returns a tuple with the Stages field value
// and a boolean to check if the value has been set.
func (o *ReviewerStageList) GetStagesOk() ([]ReviewerStage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stages, true
}

// SetStages sets field value
func (o *ReviewerStageList) SetStages(v []ReviewerStage) {
	o.Stages = v
}

func (o ReviewerStageList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReviewerStageList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stages"] = o.Stages
	return toSerialize, nil
}

type NullableReviewerStageList struct {
	value *ReviewerStageList
	isSet bool
}

func (v NullableReviewerStageList) Get() *ReviewerStageList {
	return v.value
}

func (v *NullableReviewerStageList) Set(val *ReviewerStageList) {
	v.value = val
	v.isSet = true
}

func (v NullableReviewerStageList) IsSet() bool {
	return v.isSet
}

func (v *NullableReviewerStageList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReviewerStageList(val *ReviewerStageList) *NullableReviewerStageList {
	return &NullableReviewerStageList{value: val, isSet: true}
}

func (v NullableReviewerStageList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReviewerStageList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


