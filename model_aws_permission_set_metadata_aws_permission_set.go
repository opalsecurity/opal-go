/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// checks if the AwsPermissionSetMetadataAwsPermissionSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsPermissionSetMetadataAwsPermissionSet{}

// AwsPermissionSetMetadataAwsPermissionSet struct for AwsPermissionSetMetadataAwsPermissionSet
type AwsPermissionSetMetadataAwsPermissionSet struct {
	// The ARN of the permission set.
	Arn string `json:"arn"`
	// The ID of an AWS account to which this permission set is provisioned.
	AccountId string `json:"account_id"`
}

// NewAwsPermissionSetMetadataAwsPermissionSet instantiates a new AwsPermissionSetMetadataAwsPermissionSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPermissionSetMetadataAwsPermissionSet(arn string, accountId string) *AwsPermissionSetMetadataAwsPermissionSet {
	this := AwsPermissionSetMetadataAwsPermissionSet{}
	this.Arn = arn
	this.AccountId = accountId
	return &this
}

// NewAwsPermissionSetMetadataAwsPermissionSetWithDefaults instantiates a new AwsPermissionSetMetadataAwsPermissionSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPermissionSetMetadataAwsPermissionSetWithDefaults() *AwsPermissionSetMetadataAwsPermissionSet {
	this := AwsPermissionSetMetadataAwsPermissionSet{}
	return &this
}

// GetArn returns the Arn field value
func (o *AwsPermissionSetMetadataAwsPermissionSet) GetArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Arn
}

// GetArnOk returns a tuple with the Arn field value
// and a boolean to check if the value has been set.
func (o *AwsPermissionSetMetadataAwsPermissionSet) GetArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Arn, true
}

// SetArn sets field value
func (o *AwsPermissionSetMetadataAwsPermissionSet) SetArn(v string) {
	o.Arn = v
}

// GetAccountId returns the AccountId field value
func (o *AwsPermissionSetMetadataAwsPermissionSet) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AwsPermissionSetMetadataAwsPermissionSet) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AwsPermissionSetMetadataAwsPermissionSet) SetAccountId(v string) {
	o.AccountId = v
}

func (o AwsPermissionSetMetadataAwsPermissionSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsPermissionSetMetadataAwsPermissionSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["arn"] = o.Arn
	toSerialize["account_id"] = o.AccountId
	return toSerialize, nil
}

type NullableAwsPermissionSetMetadataAwsPermissionSet struct {
	value *AwsPermissionSetMetadataAwsPermissionSet
	isSet bool
}

func (v NullableAwsPermissionSetMetadataAwsPermissionSet) Get() *AwsPermissionSetMetadataAwsPermissionSet {
	return v.value
}

func (v *NullableAwsPermissionSetMetadataAwsPermissionSet) Set(val *AwsPermissionSetMetadataAwsPermissionSet) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPermissionSetMetadataAwsPermissionSet) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPermissionSetMetadataAwsPermissionSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPermissionSetMetadataAwsPermissionSet(val *AwsPermissionSetMetadataAwsPermissionSet) *NullableAwsPermissionSetMetadataAwsPermissionSet {
	return &NullableAwsPermissionSetMetadataAwsPermissionSet{value: val, isSet: true}
}

func (v NullableAwsPermissionSetMetadataAwsPermissionSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPermissionSetMetadataAwsPermissionSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


