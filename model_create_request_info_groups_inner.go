/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRequestInfoGroupsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRequestInfoGroupsInner{}

// CreateRequestInfoGroupsInner struct for CreateRequestInfoGroupsInner
type CreateRequestInfoGroupsInner struct {
	// The ID of the group requested. Should not be specified if resource_id is specified.
	Id string `json:"id"`
	// The ID of the access level requested on the remote system.
	AccessLevelRemoteId *string `json:"access_level_remote_id,omitempty"`
	// The ID of the access level requested on the remote system.
	AccessLevelName *string `json:"access_level_name,omitempty"`
}

type _CreateRequestInfoGroupsInner CreateRequestInfoGroupsInner

// NewCreateRequestInfoGroupsInner instantiates a new CreateRequestInfoGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRequestInfoGroupsInner(id string) *CreateRequestInfoGroupsInner {
	this := CreateRequestInfoGroupsInner{}
	this.Id = id
	return &this
}

// NewCreateRequestInfoGroupsInnerWithDefaults instantiates a new CreateRequestInfoGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRequestInfoGroupsInnerWithDefaults() *CreateRequestInfoGroupsInner {
	this := CreateRequestInfoGroupsInner{}
	return &this
}

// GetId returns the Id field value
func (o *CreateRequestInfoGroupsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateRequestInfoGroupsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateRequestInfoGroupsInner) SetId(v string) {
	o.Id = v
}

// GetAccessLevelRemoteId returns the AccessLevelRemoteId field value if set, zero value otherwise.
func (o *CreateRequestInfoGroupsInner) GetAccessLevelRemoteId() string {
	if o == nil || IsNil(o.AccessLevelRemoteId) {
		var ret string
		return ret
	}
	return *o.AccessLevelRemoteId
}

// GetAccessLevelRemoteIdOk returns a tuple with the AccessLevelRemoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequestInfoGroupsInner) GetAccessLevelRemoteIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessLevelRemoteId) {
		return nil, false
	}
	return o.AccessLevelRemoteId, true
}

// HasAccessLevelRemoteId returns a boolean if a field has been set.
func (o *CreateRequestInfoGroupsInner) HasAccessLevelRemoteId() bool {
	if o != nil && !IsNil(o.AccessLevelRemoteId) {
		return true
	}

	return false
}

// SetAccessLevelRemoteId gets a reference to the given string and assigns it to the AccessLevelRemoteId field.
func (o *CreateRequestInfoGroupsInner) SetAccessLevelRemoteId(v string) {
	o.AccessLevelRemoteId = &v
}

// GetAccessLevelName returns the AccessLevelName field value if set, zero value otherwise.
func (o *CreateRequestInfoGroupsInner) GetAccessLevelName() string {
	if o == nil || IsNil(o.AccessLevelName) {
		var ret string
		return ret
	}
	return *o.AccessLevelName
}

// GetAccessLevelNameOk returns a tuple with the AccessLevelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRequestInfoGroupsInner) GetAccessLevelNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccessLevelName) {
		return nil, false
	}
	return o.AccessLevelName, true
}

// HasAccessLevelName returns a boolean if a field has been set.
func (o *CreateRequestInfoGroupsInner) HasAccessLevelName() bool {
	if o != nil && !IsNil(o.AccessLevelName) {
		return true
	}

	return false
}

// SetAccessLevelName gets a reference to the given string and assigns it to the AccessLevelName field.
func (o *CreateRequestInfoGroupsInner) SetAccessLevelName(v string) {
	o.AccessLevelName = &v
}

func (o CreateRequestInfoGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRequestInfoGroupsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.AccessLevelRemoteId) {
		toSerialize["access_level_remote_id"] = o.AccessLevelRemoteId
	}
	if !IsNil(o.AccessLevelName) {
		toSerialize["access_level_name"] = o.AccessLevelName
	}
	return toSerialize, nil
}

func (o *CreateRequestInfoGroupsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRequestInfoGroupsInner := _CreateRequestInfoGroupsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRequestInfoGroupsInner)

	if err != nil {
		return err
	}

	*o = CreateRequestInfoGroupsInner(varCreateRequestInfoGroupsInner)

	return err
}

type NullableCreateRequestInfoGroupsInner struct {
	value *CreateRequestInfoGroupsInner
	isSet bool
}

func (v NullableCreateRequestInfoGroupsInner) Get() *CreateRequestInfoGroupsInner {
	return v.value
}

func (v *NullableCreateRequestInfoGroupsInner) Set(val *CreateRequestInfoGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRequestInfoGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRequestInfoGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRequestInfoGroupsInner(val *CreateRequestInfoGroupsInner) *NullableCreateRequestInfoGroupsInner {
	return &NullableCreateRequestInfoGroupsInner{value: val, isSet: true}
}

func (v NullableCreateRequestInfoGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRequestInfoGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


