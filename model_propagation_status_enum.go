/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"fmt"
)

// PropagationStatusEnum The status of whether the user has been synced to the group or resource in the remote system.
type PropagationStatusEnum string

// List of PropagationStatusEnum
const (
	PROPAGATIONSTATUSENUM_SUCCESS PropagationStatusEnum = "SUCCESS"
	PROPAGATIONSTATUSENUM_ERR_REMOTE_INTERNAL_ERROR PropagationStatusEnum = "ERR_REMOTE_INTERNAL_ERROR"
	PROPAGATIONSTATUSENUM_ERR_REMOTE_USER_NOT_FOUND PropagationStatusEnum = "ERR_REMOTE_USER_NOT_FOUND"
	PROPAGATIONSTATUSENUM_ERR_REMOTE_USER_NOT_LINKED PropagationStatusEnum = "ERR_REMOTE_USER_NOT_LINKED"
	PROPAGATIONSTATUSENUM_ERR_REMOTE_RESOURCE_NOT_FOUND PropagationStatusEnum = "ERR_REMOTE_RESOURCE_NOT_FOUND"
	PROPAGATIONSTATUSENUM_ERR_REMOTE_THROTTLE PropagationStatusEnum = "ERR_REMOTE_THROTTLE"
	PROPAGATIONSTATUSENUM_ERR_NOT_AUTHORIZED_TO_QUERY_RESOURCE PropagationStatusEnum = "ERR_NOT_AUTHORIZED_TO_QUERY_RESOURCE"
	PROPAGATIONSTATUSENUM_ERR_REMOTE_PROVISIONING_VIA_IDP_FAILED PropagationStatusEnum = "ERR_REMOTE_PROVISIONING_VIA_IDP_FAILED"
	PROPAGATIONSTATUSENUM_ERR_IDP_EMAIL_UPDATE_CONFLICT PropagationStatusEnum = "ERR_IDP_EMAIL_UPDATE_CONFLICT"
	PROPAGATIONSTATUSENUM_ERR_TIMEOUT PropagationStatusEnum = "ERR_TIMEOUT"
	PROPAGATIONSTATUSENUM_ERR_UNKNOWN PropagationStatusEnum = "ERR_UNKNOWN"
	PROPAGATIONSTATUSENUM_ERR_OPAL_INTERNAL_ERROR PropagationStatusEnum = "ERR_OPAL_INTERNAL_ERROR"
	PROPAGATIONSTATUSENUM_ERR_ORG_READ_ONLY PropagationStatusEnum = "ERR_ORG_READ_ONLY"
	PROPAGATIONSTATUSENUM_ERR_OPERATION_UNSUPPORTED PropagationStatusEnum = "ERR_OPERATION_UNSUPPORTED"
	PROPAGATIONSTATUSENUM_PENDING PropagationStatusEnum = "PENDING"
	PROPAGATIONSTATUSENUM_PENDING_MANUAL_PROPAGATION PropagationStatusEnum = "PENDING_MANUAL_PROPAGATION"
	PROPAGATIONSTATUSENUM_PENDING_TICKET_CREATION PropagationStatusEnum = "PENDING_TICKET_CREATION"
	PROPAGATIONSTATUSENUM_ERR_TICKET_CREATION_SKIPPED PropagationStatusEnum = "ERR_TICKET_CREATION_SKIPPED"
	PROPAGATIONSTATUSENUM_ERR_DRY_RUN_MODE_ENABLED PropagationStatusEnum = "ERR_DRY_RUN_MODE_ENABLED"
	PROPAGATIONSTATUSENUM_ERR_HR_IDP_PROVIDER_NOT_LINKED PropagationStatusEnum = "ERR_HR_IDP_PROVIDER_NOT_LINKED"
	PROPAGATIONSTATUSENUM_ERR_REMOTE_UNRECOVERABLE_ERROR PropagationStatusEnum = "ERR_REMOTE_UNRECOVERABLE_ERROR"
)

// All allowed values of PropagationStatusEnum enum
var AllowedPropagationStatusEnumEnumValues = []PropagationStatusEnum{
	"SUCCESS",
	"ERR_REMOTE_INTERNAL_ERROR",
	"ERR_REMOTE_USER_NOT_FOUND",
	"ERR_REMOTE_USER_NOT_LINKED",
	"ERR_REMOTE_RESOURCE_NOT_FOUND",
	"ERR_REMOTE_THROTTLE",
	"ERR_NOT_AUTHORIZED_TO_QUERY_RESOURCE",
	"ERR_REMOTE_PROVISIONING_VIA_IDP_FAILED",
	"ERR_IDP_EMAIL_UPDATE_CONFLICT",
	"ERR_TIMEOUT",
	"ERR_UNKNOWN",
	"ERR_OPAL_INTERNAL_ERROR",
	"ERR_ORG_READ_ONLY",
	"ERR_OPERATION_UNSUPPORTED",
	"PENDING",
	"PENDING_MANUAL_PROPAGATION",
	"PENDING_TICKET_CREATION",
	"ERR_TICKET_CREATION_SKIPPED",
	"ERR_DRY_RUN_MODE_ENABLED",
	"ERR_HR_IDP_PROVIDER_NOT_LINKED",
	"ERR_REMOTE_UNRECOVERABLE_ERROR",
}

func (v *PropagationStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropagationStatusEnum(value)
	for _, existing := range AllowedPropagationStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropagationStatusEnum", value)
}

// NewPropagationStatusEnumFromValue returns a pointer to a valid PropagationStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropagationStatusEnumFromValue(v string) (*PropagationStatusEnum, error) {
	ev := PropagationStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropagationStatusEnum: valid values are %v", v, AllowedPropagationStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropagationStatusEnum) IsValid() bool {
	for _, existing := range AllowedPropagationStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropagationStatusEnum value
func (v PropagationStatusEnum) Ptr() *PropagationStatusEnum {
	return &v
}

type NullablePropagationStatusEnum struct {
	value *PropagationStatusEnum
	isSet bool
}

func (v NullablePropagationStatusEnum) Get() *PropagationStatusEnum {
	return v.value
}

func (v *NullablePropagationStatusEnum) Set(val *PropagationStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullablePropagationStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullablePropagationStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropagationStatusEnum(val *PropagationStatusEnum) *NullablePropagationStatusEnum {
	return &NullablePropagationStatusEnum{value: val, isSet: true}
}

func (v NullablePropagationStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropagationStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

