/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// CreateOwnerInfo # CreateOwnerInfo Object ### Description The `CreateOwnerInfo` object is used to store creation info for an owner.  ### Usage Example Use in the `POST Owners` endpoint.
type CreateOwnerInfo struct {
	// The name of the owner.
	Name string `json:"name"`
	// A description of the owner.
	Description *string `json:"description,omitempty"`
	// The amount of time (in minutes) before the next reviewer is notified. Use 0 to remove escalation policy.
	AccessRequestEscalationPeriod *int32 `json:"access_request_escalation_period,omitempty"`
	// Users to add to the created owner.
	UserIds []string `json:"user_ids"`
}

// NewCreateOwnerInfo instantiates a new CreateOwnerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOwnerInfo(name string, userIds []string) *CreateOwnerInfo {
	this := CreateOwnerInfo{}
	this.Name = name
	this.UserIds = userIds
	return &this
}

// NewCreateOwnerInfoWithDefaults instantiates a new CreateOwnerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOwnerInfoWithDefaults() *CreateOwnerInfo {
	this := CreateOwnerInfo{}
	return &this
}

// GetName returns the Name field value
func (o *CreateOwnerInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOwnerInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOwnerInfo) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateOwnerInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOwnerInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOwnerInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateOwnerInfo) SetDescription(v string) {
	o.Description = &v
}

// GetAccessRequestEscalationPeriod returns the AccessRequestEscalationPeriod field value if set, zero value otherwise.
func (o *CreateOwnerInfo) GetAccessRequestEscalationPeriod() int32 {
	if o == nil || o.AccessRequestEscalationPeriod == nil {
		var ret int32
		return ret
	}
	return *o.AccessRequestEscalationPeriod
}

// GetAccessRequestEscalationPeriodOk returns a tuple with the AccessRequestEscalationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOwnerInfo) GetAccessRequestEscalationPeriodOk() (*int32, bool) {
	if o == nil || o.AccessRequestEscalationPeriod == nil {
		return nil, false
	}
	return o.AccessRequestEscalationPeriod, true
}

// HasAccessRequestEscalationPeriod returns a boolean if a field has been set.
func (o *CreateOwnerInfo) HasAccessRequestEscalationPeriod() bool {
	if o != nil && o.AccessRequestEscalationPeriod != nil {
		return true
	}

	return false
}

// SetAccessRequestEscalationPeriod gets a reference to the given int32 and assigns it to the AccessRequestEscalationPeriod field.
func (o *CreateOwnerInfo) SetAccessRequestEscalationPeriod(v int32) {
	o.AccessRequestEscalationPeriod = &v
}

// GetUserIds returns the UserIds field value
func (o *CreateOwnerInfo) GetUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value
// and a boolean to check if the value has been set.
func (o *CreateOwnerInfo) GetUserIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserIds, true
}

// SetUserIds sets field value
func (o *CreateOwnerInfo) SetUserIds(v []string) {
	o.UserIds = v
}

func (o CreateOwnerInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.AccessRequestEscalationPeriod != nil {
		toSerialize["access_request_escalation_period"] = o.AccessRequestEscalationPeriod
	}
	if true {
		toSerialize["user_ids"] = o.UserIds
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOwnerInfo struct {
	value *CreateOwnerInfo
	isSet bool
}

func (v NullableCreateOwnerInfo) Get() *CreateOwnerInfo {
	return v.value
}

func (v *NullableCreateOwnerInfo) Set(val *CreateOwnerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOwnerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOwnerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOwnerInfo(val *CreateOwnerInfo) *NullableCreateOwnerInfo {
	return &NullableCreateOwnerInfo{value: val, isSet: true}
}

func (v NullableCreateOwnerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOwnerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


