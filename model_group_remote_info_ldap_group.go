/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// GroupRemoteInfoLdapGroup Remote info for LDAP group.
type GroupRemoteInfoLdapGroup struct {
	// The id of the LDAP group.
	GroupId string `json:"group_id"`
}

// NewGroupRemoteInfoLdapGroup instantiates a new GroupRemoteInfoLdapGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupRemoteInfoLdapGroup(groupId string) *GroupRemoteInfoLdapGroup {
	this := GroupRemoteInfoLdapGroup{}
	this.GroupId = groupId
	return &this
}

// NewGroupRemoteInfoLdapGroupWithDefaults instantiates a new GroupRemoteInfoLdapGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupRemoteInfoLdapGroupWithDefaults() *GroupRemoteInfoLdapGroup {
	this := GroupRemoteInfoLdapGroup{}
	return &this
}

// GetGroupId returns the GroupId field value
func (o *GroupRemoteInfoLdapGroup) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *GroupRemoteInfoLdapGroup) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *GroupRemoteInfoLdapGroup) SetGroupId(v string) {
	o.GroupId = v
}

func (o GroupRemoteInfoLdapGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group_id"] = o.GroupId
	}
	return json.Marshal(toSerialize)
}

type NullableGroupRemoteInfoLdapGroup struct {
	value *GroupRemoteInfoLdapGroup
	isSet bool
}

func (v NullableGroupRemoteInfoLdapGroup) Get() *GroupRemoteInfoLdapGroup {
	return v.value
}

func (v *NullableGroupRemoteInfoLdapGroup) Set(val *GroupRemoteInfoLdapGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupRemoteInfoLdapGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupRemoteInfoLdapGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupRemoteInfoLdapGroup(val *GroupRemoteInfoLdapGroup) *NullableGroupRemoteInfoLdapGroup {
	return &NullableGroupRemoteInfoLdapGroup{value: val, isSet: true}
}

func (v NullableGroupRemoteInfoLdapGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupRemoteInfoLdapGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


