/*
 * Opal API
 *
 * Your Home For Developer Permissions.
 *
 * API version: 1.0
 * Contact: hello@opal.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"time"
)

// PermissionUser # Permission User Object ### Description The `PermissionUser` object is used to represent a user with access to a permission.  ### Usage Example Fetch from the `LIST PermissionUsers` endpoint.
type PermissionUser struct {
	// The ID of the permission.
	PermissionId string `json:"permission_id"`
	// The ID of the user.
	UserId string `json:"user_id"`
	// The user's full name.
	FullName string `json:"full_name"`
	// The user's email.
	Email string `json:"email"`
	// The day and time the user's access will expire.
	ExpirationDate NullableTime `json:"expiration_date"`
}

// NewPermissionUser instantiates a new PermissionUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionUser(permissionId string, userId string, fullName string, email string, expirationDate NullableTime) *PermissionUser {
	this := PermissionUser{}
	this.PermissionId = permissionId
	this.UserId = userId
	this.FullName = fullName
	this.Email = email
	this.ExpirationDate = expirationDate
	return &this
}

// NewPermissionUserWithDefaults instantiates a new PermissionUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionUserWithDefaults() *PermissionUser {
	this := PermissionUser{}
	return &this
}

// GetPermissionId returns the PermissionId field value
func (o *PermissionUser) GetPermissionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PermissionId
}

// GetPermissionIdOk returns a tuple with the PermissionId field value
// and a boolean to check if the value has been set.
func (o *PermissionUser) GetPermissionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PermissionId, true
}

// SetPermissionId sets field value
func (o *PermissionUser) SetPermissionId(v string) {
	o.PermissionId = v
}

// GetUserId returns the UserId field value
func (o *PermissionUser) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *PermissionUser) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *PermissionUser) SetUserId(v string) {
	o.UserId = v
}

// GetFullName returns the FullName field value
func (o *PermissionUser) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *PermissionUser) GetFullNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *PermissionUser) SetFullName(v string) {
	o.FullName = v
}

// GetEmail returns the Email field value
func (o *PermissionUser) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *PermissionUser) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *PermissionUser) SetEmail(v string) {
	o.Email = v
}

// GetExpirationDate returns the ExpirationDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *PermissionUser) GetExpirationDate() time.Time {
	if o == nil || o.ExpirationDate.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ExpirationDate.Get()
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PermissionUser) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExpirationDate.Get(), o.ExpirationDate.IsSet()
}

// SetExpirationDate sets field value
func (o *PermissionUser) SetExpirationDate(v time.Time) {
	o.ExpirationDate.Set(&v)
}

func (o PermissionUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permission_id"] = o.PermissionId
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	if true {
		toSerialize["full_name"] = o.FullName
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["expiration_date"] = o.ExpirationDate.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionUser struct {
	value *PermissionUser
	isSet bool
}

func (v NullablePermissionUser) Get() *PermissionUser {
	return v.value
}

func (v *NullablePermissionUser) Set(val *PermissionUser) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionUser) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionUser(val *PermissionUser) *NullablePermissionUser {
	return &NullablePermissionUser{value: val, isSet: true}
}

func (v NullablePermissionUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


