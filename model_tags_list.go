/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// TagsList struct for TagsList
type TagsList struct {
	Tags []Tag `json:"tags"`
}

// NewTagsList instantiates a new TagsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagsList(tags []Tag) *TagsList {
	this := TagsList{}
	this.Tags = tags
	return &this
}

// NewTagsListWithDefaults instantiates a new TagsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagsListWithDefaults() *TagsList {
	this := TagsList{}
	return &this
}

// GetTags returns the Tags field value
func (o *TagsList) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *TagsList) GetTagsOk() ([]Tag, bool) {
	if o == nil {
    return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *TagsList) SetTags(v []Tag) {
	o.Tags = v
}

func (o TagsList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableTagsList struct {
	value *TagsList
	isSet bool
}

func (v NullableTagsList) Get() *TagsList {
	return v.value
}

func (v *NullableTagsList) Set(val *TagsList) {
	v.value = val
	v.isSet = true
}

func (v NullableTagsList) IsSet() bool {
	return v.isSet
}

func (v *NullableTagsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagsList(val *TagsList) *NullableTagsList {
	return &NullableTagsList{value: val, isSet: true}
}

func (v NullableTagsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


