/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// UpdateOwnerInfoList struct for UpdateOwnerInfoList
type UpdateOwnerInfoList struct {
	// A list of owners with information to update.
	Owners []UpdateOwnerInfo `json:"owners"`
}

// NewUpdateOwnerInfoList instantiates a new UpdateOwnerInfoList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOwnerInfoList(owners []UpdateOwnerInfo) *UpdateOwnerInfoList {
	this := UpdateOwnerInfoList{}
	this.Owners = owners
	return &this
}

// NewUpdateOwnerInfoListWithDefaults instantiates a new UpdateOwnerInfoList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOwnerInfoListWithDefaults() *UpdateOwnerInfoList {
	this := UpdateOwnerInfoList{}
	return &this
}

// GetOwners returns the Owners field value
func (o *UpdateOwnerInfoList) GetOwners() []UpdateOwnerInfo {
	if o == nil {
		var ret []UpdateOwnerInfo
		return ret
	}

	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value
// and a boolean to check if the value has been set.
func (o *UpdateOwnerInfoList) GetOwnersOk() ([]UpdateOwnerInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owners, true
}

// SetOwners sets field value
func (o *UpdateOwnerInfoList) SetOwners(v []UpdateOwnerInfo) {
	o.Owners = v
}

func (o UpdateOwnerInfoList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["owners"] = o.Owners
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateOwnerInfoList struct {
	value *UpdateOwnerInfoList
	isSet bool
}

func (v NullableUpdateOwnerInfoList) Get() *UpdateOwnerInfoList {
	return v.value
}

func (v *NullableUpdateOwnerInfoList) Set(val *UpdateOwnerInfoList) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOwnerInfoList) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOwnerInfoList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOwnerInfoList(val *UpdateOwnerInfoList) *NullableUpdateOwnerInfoList {
	return &NullableUpdateOwnerInfoList{value: val, isSet: true}
}

func (v NullableUpdateOwnerInfoList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOwnerInfoList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


