/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// checks if the ResourceRemoteInfoSalesforceRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceRemoteInfoSalesforceRole{}

// ResourceRemoteInfoSalesforceRole Remote info for Salesforce role.
type ResourceRemoteInfoSalesforceRole struct {
	// The id of the role.
	RoleId string `json:"role_id"`
}

// NewResourceRemoteInfoSalesforceRole instantiates a new ResourceRemoteInfoSalesforceRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRemoteInfoSalesforceRole(roleId string) *ResourceRemoteInfoSalesforceRole {
	this := ResourceRemoteInfoSalesforceRole{}
	this.RoleId = roleId
	return &this
}

// NewResourceRemoteInfoSalesforceRoleWithDefaults instantiates a new ResourceRemoteInfoSalesforceRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRemoteInfoSalesforceRoleWithDefaults() *ResourceRemoteInfoSalesforceRole {
	this := ResourceRemoteInfoSalesforceRole{}
	return &this
}

// GetRoleId returns the RoleId field value
func (o *ResourceRemoteInfoSalesforceRole) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *ResourceRemoteInfoSalesforceRole) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *ResourceRemoteInfoSalesforceRole) SetRoleId(v string) {
	o.RoleId = v
}

func (o ResourceRemoteInfoSalesforceRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceRemoteInfoSalesforceRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role_id"] = o.RoleId
	return toSerialize, nil
}

type NullableResourceRemoteInfoSalesforceRole struct {
	value *ResourceRemoteInfoSalesforceRole
	isSet bool
}

func (v NullableResourceRemoteInfoSalesforceRole) Get() *ResourceRemoteInfoSalesforceRole {
	return v.value
}

func (v *NullableResourceRemoteInfoSalesforceRole) Set(val *ResourceRemoteInfoSalesforceRole) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRemoteInfoSalesforceRole) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRemoteInfoSalesforceRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRemoteInfoSalesforceRole(val *ResourceRemoteInfoSalesforceRole) *NullableResourceRemoteInfoSalesforceRole {
	return &NullableResourceRemoteInfoSalesforceRole{value: val, isSet: true}
}

func (v NullableResourceRemoteInfoSalesforceRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRemoteInfoSalesforceRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


