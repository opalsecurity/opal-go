/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// checks if the ConfigurationTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationTemplate{}

// ConfigurationTemplate # Configuration Template Object ### Description The `ConfigurationTemplate` object is used to represent a configuration template.  ### Usage Example Returned from the `GET Configuration Templates` endpoint.
type ConfigurationTemplate struct {
	// The ID of the configuration template.
	ConfigurationTemplateId *string `json:"configuration_template_id,omitempty"`
	// The name of the configuration template.
	Name *string `json:"name,omitempty"`
	// The ID of the owner of the configuration template.
	AdminOwnerId *string `json:"admin_owner_id,omitempty"`
	// The visibility info of the configuration template.
	Visibility *VisibilityInfo `json:"visibility,omitempty"`
	// The IDs of the audit message channels linked to the configuration template.
	LinkedAuditMessageChannelIds []string `json:"linked_audit_message_channel_ids,omitempty"`
	// The ID of the request configuration linked to the configuration template.
	RequestConfigurationId *string `json:"request_configuration_id,omitempty"`
	// The IDs of the on-call schedules linked to the configuration template.
	MemberOncallScheduleIds []string `json:"member_oncall_schedule_ids,omitempty"`
	// The IDs of the break glass users linked to the configuration template.
	BreakGlassUserIds []string `json:"break_glass_user_ids,omitempty"`
	// A bool representing whether or not to require MFA for reviewers to approve requests for this configuration template.
	RequireMfaToApprove *bool `json:"require_mfa_to_approve,omitempty"`
	// A bool representing whether or not to require MFA to connect to resources associated with this configuration template.
	RequireMfaToConnect *bool `json:"require_mfa_to_connect,omitempty"`
	TicketPropagation *TicketPropagationConfiguration `json:"ticket_propagation,omitempty"`
	// Custom request notification sent upon request approval for this configuration template.
	CustomRequestNotification *string `json:"custom_request_notification,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConfigurationTemplate ConfigurationTemplate

// NewConfigurationTemplate instantiates a new ConfigurationTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationTemplate() *ConfigurationTemplate {
	this := ConfigurationTemplate{}
	return &this
}

// NewConfigurationTemplateWithDefaults instantiates a new ConfigurationTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationTemplateWithDefaults() *ConfigurationTemplate {
	this := ConfigurationTemplate{}
	return &this
}

// GetConfigurationTemplateId returns the ConfigurationTemplateId field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetConfigurationTemplateId() string {
	if o == nil || IsNil(o.ConfigurationTemplateId) {
		var ret string
		return ret
	}
	return *o.ConfigurationTemplateId
}

// GetConfigurationTemplateIdOk returns a tuple with the ConfigurationTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetConfigurationTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationTemplateId) {
		return nil, false
	}
	return o.ConfigurationTemplateId, true
}

// HasConfigurationTemplateId returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasConfigurationTemplateId() bool {
	if o != nil && !IsNil(o.ConfigurationTemplateId) {
		return true
	}

	return false
}

// SetConfigurationTemplateId gets a reference to the given string and assigns it to the ConfigurationTemplateId field.
func (o *ConfigurationTemplate) SetConfigurationTemplateId(v string) {
	o.ConfigurationTemplateId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigurationTemplate) SetName(v string) {
	o.Name = &v
}

// GetAdminOwnerId returns the AdminOwnerId field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetAdminOwnerId() string {
	if o == nil || IsNil(o.AdminOwnerId) {
		var ret string
		return ret
	}
	return *o.AdminOwnerId
}

// GetAdminOwnerIdOk returns a tuple with the AdminOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetAdminOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdminOwnerId) {
		return nil, false
	}
	return o.AdminOwnerId, true
}

// HasAdminOwnerId returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasAdminOwnerId() bool {
	if o != nil && !IsNil(o.AdminOwnerId) {
		return true
	}

	return false
}

// SetAdminOwnerId gets a reference to the given string and assigns it to the AdminOwnerId field.
func (o *ConfigurationTemplate) SetAdminOwnerId(v string) {
	o.AdminOwnerId = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetVisibility() VisibilityInfo {
	if o == nil || IsNil(o.Visibility) {
		var ret VisibilityInfo
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetVisibilityOk() (*VisibilityInfo, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given VisibilityInfo and assigns it to the Visibility field.
func (o *ConfigurationTemplate) SetVisibility(v VisibilityInfo) {
	o.Visibility = &v
}

// GetLinkedAuditMessageChannelIds returns the LinkedAuditMessageChannelIds field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetLinkedAuditMessageChannelIds() []string {
	if o == nil || IsNil(o.LinkedAuditMessageChannelIds) {
		var ret []string
		return ret
	}
	return o.LinkedAuditMessageChannelIds
}

// GetLinkedAuditMessageChannelIdsOk returns a tuple with the LinkedAuditMessageChannelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetLinkedAuditMessageChannelIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LinkedAuditMessageChannelIds) {
		return nil, false
	}
	return o.LinkedAuditMessageChannelIds, true
}

// HasLinkedAuditMessageChannelIds returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasLinkedAuditMessageChannelIds() bool {
	if o != nil && !IsNil(o.LinkedAuditMessageChannelIds) {
		return true
	}

	return false
}

// SetLinkedAuditMessageChannelIds gets a reference to the given []string and assigns it to the LinkedAuditMessageChannelIds field.
func (o *ConfigurationTemplate) SetLinkedAuditMessageChannelIds(v []string) {
	o.LinkedAuditMessageChannelIds = v
}

// GetRequestConfigurationId returns the RequestConfigurationId field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetRequestConfigurationId() string {
	if o == nil || IsNil(o.RequestConfigurationId) {
		var ret string
		return ret
	}
	return *o.RequestConfigurationId
}

// GetRequestConfigurationIdOk returns a tuple with the RequestConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetRequestConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestConfigurationId) {
		return nil, false
	}
	return o.RequestConfigurationId, true
}

// HasRequestConfigurationId returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasRequestConfigurationId() bool {
	if o != nil && !IsNil(o.RequestConfigurationId) {
		return true
	}

	return false
}

// SetRequestConfigurationId gets a reference to the given string and assigns it to the RequestConfigurationId field.
func (o *ConfigurationTemplate) SetRequestConfigurationId(v string) {
	o.RequestConfigurationId = &v
}

// GetMemberOncallScheduleIds returns the MemberOncallScheduleIds field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetMemberOncallScheduleIds() []string {
	if o == nil || IsNil(o.MemberOncallScheduleIds) {
		var ret []string
		return ret
	}
	return o.MemberOncallScheduleIds
}

// GetMemberOncallScheduleIdsOk returns a tuple with the MemberOncallScheduleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetMemberOncallScheduleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.MemberOncallScheduleIds) {
		return nil, false
	}
	return o.MemberOncallScheduleIds, true
}

// HasMemberOncallScheduleIds returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasMemberOncallScheduleIds() bool {
	if o != nil && !IsNil(o.MemberOncallScheduleIds) {
		return true
	}

	return false
}

// SetMemberOncallScheduleIds gets a reference to the given []string and assigns it to the MemberOncallScheduleIds field.
func (o *ConfigurationTemplate) SetMemberOncallScheduleIds(v []string) {
	o.MemberOncallScheduleIds = v
}

// GetBreakGlassUserIds returns the BreakGlassUserIds field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetBreakGlassUserIds() []string {
	if o == nil || IsNil(o.BreakGlassUserIds) {
		var ret []string
		return ret
	}
	return o.BreakGlassUserIds
}

// GetBreakGlassUserIdsOk returns a tuple with the BreakGlassUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetBreakGlassUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.BreakGlassUserIds) {
		return nil, false
	}
	return o.BreakGlassUserIds, true
}

// HasBreakGlassUserIds returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasBreakGlassUserIds() bool {
	if o != nil && !IsNil(o.BreakGlassUserIds) {
		return true
	}

	return false
}

// SetBreakGlassUserIds gets a reference to the given []string and assigns it to the BreakGlassUserIds field.
func (o *ConfigurationTemplate) SetBreakGlassUserIds(v []string) {
	o.BreakGlassUserIds = v
}

// GetRequireMfaToApprove returns the RequireMfaToApprove field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetRequireMfaToApprove() bool {
	if o == nil || IsNil(o.RequireMfaToApprove) {
		var ret bool
		return ret
	}
	return *o.RequireMfaToApprove
}

// GetRequireMfaToApproveOk returns a tuple with the RequireMfaToApprove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetRequireMfaToApproveOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireMfaToApprove) {
		return nil, false
	}
	return o.RequireMfaToApprove, true
}

// HasRequireMfaToApprove returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasRequireMfaToApprove() bool {
	if o != nil && !IsNil(o.RequireMfaToApprove) {
		return true
	}

	return false
}

// SetRequireMfaToApprove gets a reference to the given bool and assigns it to the RequireMfaToApprove field.
func (o *ConfigurationTemplate) SetRequireMfaToApprove(v bool) {
	o.RequireMfaToApprove = &v
}

// GetRequireMfaToConnect returns the RequireMfaToConnect field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetRequireMfaToConnect() bool {
	if o == nil || IsNil(o.RequireMfaToConnect) {
		var ret bool
		return ret
	}
	return *o.RequireMfaToConnect
}

// GetRequireMfaToConnectOk returns a tuple with the RequireMfaToConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetRequireMfaToConnectOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireMfaToConnect) {
		return nil, false
	}
	return o.RequireMfaToConnect, true
}

// HasRequireMfaToConnect returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasRequireMfaToConnect() bool {
	if o != nil && !IsNil(o.RequireMfaToConnect) {
		return true
	}

	return false
}

// SetRequireMfaToConnect gets a reference to the given bool and assigns it to the RequireMfaToConnect field.
func (o *ConfigurationTemplate) SetRequireMfaToConnect(v bool) {
	o.RequireMfaToConnect = &v
}

// GetTicketPropagation returns the TicketPropagation field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetTicketPropagation() TicketPropagationConfiguration {
	if o == nil || IsNil(o.TicketPropagation) {
		var ret TicketPropagationConfiguration
		return ret
	}
	return *o.TicketPropagation
}

// GetTicketPropagationOk returns a tuple with the TicketPropagation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetTicketPropagationOk() (*TicketPropagationConfiguration, bool) {
	if o == nil || IsNil(o.TicketPropagation) {
		return nil, false
	}
	return o.TicketPropagation, true
}

// HasTicketPropagation returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasTicketPropagation() bool {
	if o != nil && !IsNil(o.TicketPropagation) {
		return true
	}

	return false
}

// SetTicketPropagation gets a reference to the given TicketPropagationConfiguration and assigns it to the TicketPropagation field.
func (o *ConfigurationTemplate) SetTicketPropagation(v TicketPropagationConfiguration) {
	o.TicketPropagation = &v
}

// GetCustomRequestNotification returns the CustomRequestNotification field value if set, zero value otherwise.
func (o *ConfigurationTemplate) GetCustomRequestNotification() string {
	if o == nil || IsNil(o.CustomRequestNotification) {
		var ret string
		return ret
	}
	return *o.CustomRequestNotification
}

// GetCustomRequestNotificationOk returns a tuple with the CustomRequestNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationTemplate) GetCustomRequestNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.CustomRequestNotification) {
		return nil, false
	}
	return o.CustomRequestNotification, true
}

// HasCustomRequestNotification returns a boolean if a field has been set.
func (o *ConfigurationTemplate) HasCustomRequestNotification() bool {
	if o != nil && !IsNil(o.CustomRequestNotification) {
		return true
	}

	return false
}

// SetCustomRequestNotification gets a reference to the given string and assigns it to the CustomRequestNotification field.
func (o *ConfigurationTemplate) SetCustomRequestNotification(v string) {
	o.CustomRequestNotification = &v
}

func (o ConfigurationTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigurationTemplateId) {
		toSerialize["configuration_template_id"] = o.ConfigurationTemplateId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AdminOwnerId) {
		toSerialize["admin_owner_id"] = o.AdminOwnerId
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.LinkedAuditMessageChannelIds) {
		toSerialize["linked_audit_message_channel_ids"] = o.LinkedAuditMessageChannelIds
	}
	if !IsNil(o.RequestConfigurationId) {
		toSerialize["request_configuration_id"] = o.RequestConfigurationId
	}
	if !IsNil(o.MemberOncallScheduleIds) {
		toSerialize["member_oncall_schedule_ids"] = o.MemberOncallScheduleIds
	}
	if !IsNil(o.BreakGlassUserIds) {
		toSerialize["break_glass_user_ids"] = o.BreakGlassUserIds
	}
	if !IsNil(o.RequireMfaToApprove) {
		toSerialize["require_mfa_to_approve"] = o.RequireMfaToApprove
	}
	if !IsNil(o.RequireMfaToConnect) {
		toSerialize["require_mfa_to_connect"] = o.RequireMfaToConnect
	}
	if !IsNil(o.TicketPropagation) {
		toSerialize["ticket_propagation"] = o.TicketPropagation
	}
	if !IsNil(o.CustomRequestNotification) {
		toSerialize["custom_request_notification"] = o.CustomRequestNotification
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConfigurationTemplate) UnmarshalJSON(data []byte) (err error) {
	varConfigurationTemplate := _ConfigurationTemplate{}

	err = json.Unmarshal(data, &varConfigurationTemplate)

	if err != nil {
		return err
	}

	*o = ConfigurationTemplate(varConfigurationTemplate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "configuration_template_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "admin_owner_id")
		delete(additionalProperties, "visibility")
		delete(additionalProperties, "linked_audit_message_channel_ids")
		delete(additionalProperties, "request_configuration_id")
		delete(additionalProperties, "member_oncall_schedule_ids")
		delete(additionalProperties, "break_glass_user_ids")
		delete(additionalProperties, "require_mfa_to_approve")
		delete(additionalProperties, "require_mfa_to_connect")
		delete(additionalProperties, "ticket_propagation")
		delete(additionalProperties, "custom_request_notification")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConfigurationTemplate struct {
	value *ConfigurationTemplate
	isSet bool
}

func (v NullableConfigurationTemplate) Get() *ConfigurationTemplate {
	return v.value
}

func (v *NullableConfigurationTemplate) Set(val *ConfigurationTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationTemplate(val *ConfigurationTemplate) *NullableConfigurationTemplate {
	return &NullableConfigurationTemplate{value: val, isSet: true}
}

func (v NullableConfigurationTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


