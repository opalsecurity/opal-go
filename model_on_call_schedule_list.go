/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OnCallScheduleList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnCallScheduleList{}

// OnCallScheduleList struct for OnCallScheduleList
type OnCallScheduleList struct {
	OnCallSchedules []OnCallSchedule `json:"on_call_schedules"`
}

type _OnCallScheduleList OnCallScheduleList

// NewOnCallScheduleList instantiates a new OnCallScheduleList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnCallScheduleList(onCallSchedules []OnCallSchedule) *OnCallScheduleList {
	this := OnCallScheduleList{}
	this.OnCallSchedules = onCallSchedules
	return &this
}

// NewOnCallScheduleListWithDefaults instantiates a new OnCallScheduleList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnCallScheduleListWithDefaults() *OnCallScheduleList {
	this := OnCallScheduleList{}
	return &this
}

// GetOnCallSchedules returns the OnCallSchedules field value
func (o *OnCallScheduleList) GetOnCallSchedules() []OnCallSchedule {
	if o == nil {
		var ret []OnCallSchedule
		return ret
	}

	return o.OnCallSchedules
}

// GetOnCallSchedulesOk returns a tuple with the OnCallSchedules field value
// and a boolean to check if the value has been set.
func (o *OnCallScheduleList) GetOnCallSchedulesOk() ([]OnCallSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnCallSchedules, true
}

// SetOnCallSchedules sets field value
func (o *OnCallScheduleList) SetOnCallSchedules(v []OnCallSchedule) {
	o.OnCallSchedules = v
}

func (o OnCallScheduleList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnCallScheduleList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["on_call_schedules"] = o.OnCallSchedules
	return toSerialize, nil
}

func (o *OnCallScheduleList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"on_call_schedules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnCallScheduleList := _OnCallScheduleList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOnCallScheduleList)

	if err != nil {
		return err
	}

	*o = OnCallScheduleList(varOnCallScheduleList)

	return err
}

type NullableOnCallScheduleList struct {
	value *OnCallScheduleList
	isSet bool
}

func (v NullableOnCallScheduleList) Get() *OnCallScheduleList {
	return v.value
}

func (v *NullableOnCallScheduleList) Set(val *OnCallScheduleList) {
	v.value = val
	v.isSet = true
}

func (v NullableOnCallScheduleList) IsSet() bool {
	return v.isSet
}

func (v *NullableOnCallScheduleList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnCallScheduleList(val *OnCallScheduleList) *NullableOnCallScheduleList {
	return &NullableOnCallScheduleList{value: val, isSet: true}
}

func (v NullableOnCallScheduleList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnCallScheduleList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


