/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"fmt"
)

// checks if the PropagationStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropagationStatus{}

// PropagationStatus The state of whether the push action was propagated to the remote system. If this is null, the access was synced from the remote system.
type PropagationStatus struct {
	Status PropagationStatusEnum `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _PropagationStatus PropagationStatus

// NewPropagationStatus instantiates a new PropagationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropagationStatus(status PropagationStatusEnum) *PropagationStatus {
	this := PropagationStatus{}
	this.Status = status
	return &this
}

// NewPropagationStatusWithDefaults instantiates a new PropagationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropagationStatusWithDefaults() *PropagationStatus {
	this := PropagationStatus{}
	return &this
}

// GetStatus returns the Status field value
func (o *PropagationStatus) GetStatus() PropagationStatusEnum {
	if o == nil {
		var ret PropagationStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PropagationStatus) GetStatusOk() (*PropagationStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PropagationStatus) SetStatus(v PropagationStatusEnum) {
	o.Status = v
}

func (o PropagationStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropagationStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PropagationStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPropagationStatus := _PropagationStatus{}

	err = json.Unmarshal(data, &varPropagationStatus)

	if err != nil {
		return err
	}

	*o = PropagationStatus(varPropagationStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePropagationStatus struct {
	value *PropagationStatus
	isSet bool
}

func (v NullablePropagationStatus) Get() *PropagationStatus {
	return v.value
}

func (v *NullablePropagationStatus) Set(val *PropagationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePropagationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePropagationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropagationStatus(val *PropagationStatus) *NullablePropagationStatus {
	return &NullablePropagationStatus{value: val, isSet: true}
}

func (v NullablePropagationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropagationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


