/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// checks if the ResourceRemoteInfoGcpComputeInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceRemoteInfoGcpComputeInstance{}

// ResourceRemoteInfoGcpComputeInstance Remote info for GCP compute instance.
type ResourceRemoteInfoGcpComputeInstance struct {
	// The id of the instance.
	InstanceId string `json:"instance_id"`
	// The id of the project the instance is in.
	ProjectId string `json:"project_id"`
	// The zone the instance is in.
	Zone string `json:"zone"`
}

// NewResourceRemoteInfoGcpComputeInstance instantiates a new ResourceRemoteInfoGcpComputeInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRemoteInfoGcpComputeInstance(instanceId string, projectId string, zone string) *ResourceRemoteInfoGcpComputeInstance {
	this := ResourceRemoteInfoGcpComputeInstance{}
	this.InstanceId = instanceId
	this.ProjectId = projectId
	this.Zone = zone
	return &this
}

// NewResourceRemoteInfoGcpComputeInstanceWithDefaults instantiates a new ResourceRemoteInfoGcpComputeInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRemoteInfoGcpComputeInstanceWithDefaults() *ResourceRemoteInfoGcpComputeInstance {
	this := ResourceRemoteInfoGcpComputeInstance{}
	return &this
}

// GetInstanceId returns the InstanceId field value
func (o *ResourceRemoteInfoGcpComputeInstance) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *ResourceRemoteInfoGcpComputeInstance) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *ResourceRemoteInfoGcpComputeInstance) SetInstanceId(v string) {
	o.InstanceId = v
}

// GetProjectId returns the ProjectId field value
func (o *ResourceRemoteInfoGcpComputeInstance) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ResourceRemoteInfoGcpComputeInstance) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ResourceRemoteInfoGcpComputeInstance) SetProjectId(v string) {
	o.ProjectId = v
}

// GetZone returns the Zone field value
func (o *ResourceRemoteInfoGcpComputeInstance) GetZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *ResourceRemoteInfoGcpComputeInstance) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *ResourceRemoteInfoGcpComputeInstance) SetZone(v string) {
	o.Zone = v
}

func (o ResourceRemoteInfoGcpComputeInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceRemoteInfoGcpComputeInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instance_id"] = o.InstanceId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["zone"] = o.Zone
	return toSerialize, nil
}

type NullableResourceRemoteInfoGcpComputeInstance struct {
	value *ResourceRemoteInfoGcpComputeInstance
	isSet bool
}

func (v NullableResourceRemoteInfoGcpComputeInstance) Get() *ResourceRemoteInfoGcpComputeInstance {
	return v.value
}

func (v *NullableResourceRemoteInfoGcpComputeInstance) Set(val *ResourceRemoteInfoGcpComputeInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRemoteInfoGcpComputeInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRemoteInfoGcpComputeInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRemoteInfoGcpComputeInstance(val *ResourceRemoteInfoGcpComputeInstance) *NullableResourceRemoteInfoGcpComputeInstance {
	return &NullableResourceRemoteInfoGcpComputeInstance{value: val, isSet: true}
}

func (v NullableResourceRemoteInfoGcpComputeInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRemoteInfoGcpComputeInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


