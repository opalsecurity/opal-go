/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// UpdateOwnerInfo # UpdateOwnerInfo Object ### Description The `UpdateOwnerInfo` object is used as an input to the UpdateOwner API.
type UpdateOwnerInfo struct {
	// The ID of the owner.
	OwnerId string `json:"owner_id"`
	// The name of the owner.
	Name *string `json:"name,omitempty"`
	// A description of the owner.
	Description *string `json:"description,omitempty"`
	// The amount of time (in minutes) before the next reviewer is notified. Use 0 to remove escalation policy.
	AccessRequestEscalationPeriod *int32 `json:"access_request_escalation_period,omitempty"`
	// The message channel id for the reviewer channel. Use \"\" to remove an existing message channel.
	ReviewerMessageChannelId *string `json:"reviewer_message_channel_id,omitempty"`
}

// NewUpdateOwnerInfo instantiates a new UpdateOwnerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOwnerInfo(ownerId string) *UpdateOwnerInfo {
	this := UpdateOwnerInfo{}
	this.OwnerId = ownerId
	return &this
}

// NewUpdateOwnerInfoWithDefaults instantiates a new UpdateOwnerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOwnerInfoWithDefaults() *UpdateOwnerInfo {
	this := UpdateOwnerInfo{}
	return &this
}

// GetOwnerId returns the OwnerId field value
func (o *UpdateOwnerInfo) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *UpdateOwnerInfo) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *UpdateOwnerInfo) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateOwnerInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOwnerInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateOwnerInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateOwnerInfo) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateOwnerInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOwnerInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateOwnerInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateOwnerInfo) SetDescription(v string) {
	o.Description = &v
}

// GetAccessRequestEscalationPeriod returns the AccessRequestEscalationPeriod field value if set, zero value otherwise.
func (o *UpdateOwnerInfo) GetAccessRequestEscalationPeriod() int32 {
	if o == nil || o.AccessRequestEscalationPeriod == nil {
		var ret int32
		return ret
	}
	return *o.AccessRequestEscalationPeriod
}

// GetAccessRequestEscalationPeriodOk returns a tuple with the AccessRequestEscalationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOwnerInfo) GetAccessRequestEscalationPeriodOk() (*int32, bool) {
	if o == nil || o.AccessRequestEscalationPeriod == nil {
		return nil, false
	}
	return o.AccessRequestEscalationPeriod, true
}

// HasAccessRequestEscalationPeriod returns a boolean if a field has been set.
func (o *UpdateOwnerInfo) HasAccessRequestEscalationPeriod() bool {
	if o != nil && o.AccessRequestEscalationPeriod != nil {
		return true
	}

	return false
}

// SetAccessRequestEscalationPeriod gets a reference to the given int32 and assigns it to the AccessRequestEscalationPeriod field.
func (o *UpdateOwnerInfo) SetAccessRequestEscalationPeriod(v int32) {
	o.AccessRequestEscalationPeriod = &v
}

// GetReviewerMessageChannelId returns the ReviewerMessageChannelId field value if set, zero value otherwise.
func (o *UpdateOwnerInfo) GetReviewerMessageChannelId() string {
	if o == nil || o.ReviewerMessageChannelId == nil {
		var ret string
		return ret
	}
	return *o.ReviewerMessageChannelId
}

// GetReviewerMessageChannelIdOk returns a tuple with the ReviewerMessageChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOwnerInfo) GetReviewerMessageChannelIdOk() (*string, bool) {
	if o == nil || o.ReviewerMessageChannelId == nil {
		return nil, false
	}
	return o.ReviewerMessageChannelId, true
}

// HasReviewerMessageChannelId returns a boolean if a field has been set.
func (o *UpdateOwnerInfo) HasReviewerMessageChannelId() bool {
	if o != nil && o.ReviewerMessageChannelId != nil {
		return true
	}

	return false
}

// SetReviewerMessageChannelId gets a reference to the given string and assigns it to the ReviewerMessageChannelId field.
func (o *UpdateOwnerInfo) SetReviewerMessageChannelId(v string) {
	o.ReviewerMessageChannelId = &v
}

func (o UpdateOwnerInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["owner_id"] = o.OwnerId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.AccessRequestEscalationPeriod != nil {
		toSerialize["access_request_escalation_period"] = o.AccessRequestEscalationPeriod
	}
	if o.ReviewerMessageChannelId != nil {
		toSerialize["reviewer_message_channel_id"] = o.ReviewerMessageChannelId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateOwnerInfo struct {
	value *UpdateOwnerInfo
	isSet bool
}

func (v NullableUpdateOwnerInfo) Get() *UpdateOwnerInfo {
	return v.value
}

func (v *NullableUpdateOwnerInfo) Set(val *UpdateOwnerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOwnerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOwnerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOwnerInfo(val *UpdateOwnerInfo) *NullableUpdateOwnerInfo {
	return &NullableUpdateOwnerInfo{value: val, isSet: true}
}

func (v NullableUpdateOwnerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOwnerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


