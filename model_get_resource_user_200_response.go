/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetResourceUser200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetResourceUser200Response{}

// GetResourceUser200Response struct for GetResourceUser200Response
type GetResourceUser200Response struct {
	Data []ResourceUser `json:"data"`
	// Pagination cursor for the next page of results
	Cursor *string `json:"cursor,omitempty"`
	// Total number of results
	TotalCount *int32 `json:"total_count,omitempty"`
}

type _GetResourceUser200Response GetResourceUser200Response

// NewGetResourceUser200Response instantiates a new GetResourceUser200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResourceUser200Response(data []ResourceUser) *GetResourceUser200Response {
	this := GetResourceUser200Response{}
	this.Data = data
	return &this
}

// NewGetResourceUser200ResponseWithDefaults instantiates a new GetResourceUser200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResourceUser200ResponseWithDefaults() *GetResourceUser200Response {
	this := GetResourceUser200Response{}
	return &this
}

// GetData returns the Data field value
func (o *GetResourceUser200Response) GetData() []ResourceUser {
	if o == nil {
		var ret []ResourceUser
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetResourceUser200Response) GetDataOk() ([]ResourceUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *GetResourceUser200Response) SetData(v []ResourceUser) {
	o.Data = v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *GetResourceUser200Response) GetCursor() string {
	if o == nil || IsNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResourceUser200Response) GetCursorOk() (*string, bool) {
	if o == nil || IsNil(o.Cursor) {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *GetResourceUser200Response) HasCursor() bool {
	if o != nil && !IsNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *GetResourceUser200Response) SetCursor(v string) {
	o.Cursor = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetResourceUser200Response) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResourceUser200Response) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetResourceUser200Response) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetResourceUser200Response) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o GetResourceUser200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetResourceUser200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	return toSerialize, nil
}

func (o *GetResourceUser200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetResourceUser200Response := _GetResourceUser200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetResourceUser200Response)

	if err != nil {
		return err
	}

	*o = GetResourceUser200Response(varGetResourceUser200Response)

	return err
}

type NullableGetResourceUser200Response struct {
	value *GetResourceUser200Response
	isSet bool
}

func (v NullableGetResourceUser200Response) Get() *GetResourceUser200Response {
	return v.value
}

func (v *NullableGetResourceUser200Response) Set(val *GetResourceUser200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResourceUser200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResourceUser200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResourceUser200Response(val *GetResourceUser200Response) *NullableGetResourceUser200Response {
	return &NullableGetResourceUser200Response{value: val, isSet: true}
}

func (v NullableGetResourceUser200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResourceUser200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


