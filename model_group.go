/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// Group # Group Object ### Description The `Group` object is used to represent a group.  ### Usage Example Update from the `UPDATE Groups` endpoint.
type Group struct {
	// The ID of the group.
	GroupId string `json:"group_id"`
	// The ID of the group's app.
	AppId *string `json:"app_id,omitempty"`
	// The name of the group.
	Name *string `json:"name,omitempty"`
	// A description of the group.
	Description *string `json:"description,omitempty"`
	// The ID of the owner of the group.
	AdminOwnerId *string `json:"admin_owner_id,omitempty"`
	// The ID of the remote.
	RemoteId *string `json:"remote_id,omitempty"`
	// The name of the remote.
	RemoteName *string `json:"remote_name,omitempty"`
	GroupType *GroupTypeEnum `json:"group_type,omitempty"`
	// The maximum duration for which the group can be requested (in minutes).
	MaxDuration *int32 `json:"max_duration,omitempty"`
	// The recommended duration for which the group should be requested (in minutes). -1 represents an indefinite duration.
	RecommendedDuration *int32 `json:"recommended_duration,omitempty"`
	// A bool representing whether or not access requests to the group require manager approval.
	// Deprecated
	RequireManagerApproval *bool `json:"require_manager_approval,omitempty"`
	// A bool representing whether or not access requests to the group require an access ticket.
	RequireSupportTicket *bool `json:"require_support_ticket,omitempty"`
	// The ID of the folder that the group is located in.
	FolderId *string `json:"folder_id,omitempty"`
	// A bool representing whether or not to require MFA for reviewers to approve requests for this group.
	RequireMfaToApprove *bool `json:"require_mfa_to_approve,omitempty"`
	// A bool representing whether or not to require MFA for requesting access to this group.
	RequireMfaToRequest *bool `json:"require_mfa_to_request,omitempty"`
	// A bool representing whether or not to automatically approve requests to this group.
	AutoApproval *bool `json:"auto_approval,omitempty"`
	// The ID of the associated request template.
	RequestTemplateId *string `json:"request_template_id,omitempty"`
	// A bool representing whether or not to allow access requests to this group.
	IsRequestable *bool `json:"is_requestable,omitempty"`
	// JSON metadata about the remote group. Only set for items linked to remote systems. See [this guide](https://docs.opal.dev/reference/end-system-objects) for details.
	Metadata *string `json:"metadata,omitempty"`
}

// NewGroup instantiates a new Group object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroup(groupId string) *Group {
	this := Group{}
	this.GroupId = groupId
	return &this
}

// NewGroupWithDefaults instantiates a new Group object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupWithDefaults() *Group {
	this := Group{}
	return &this
}

// GetGroupId returns the GroupId field value
func (o *Group) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *Group) GetGroupIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *Group) SetGroupId(v string) {
	o.GroupId = v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *Group) GetAppId() string {
	if o == nil || isNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetAppIdOk() (*string, bool) {
	if o == nil || isNil(o.AppId) {
    return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *Group) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *Group) SetAppId(v string) {
	o.AppId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Group) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Group) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Group) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Group) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Group) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Group) SetDescription(v string) {
	o.Description = &v
}

// GetAdminOwnerId returns the AdminOwnerId field value if set, zero value otherwise.
func (o *Group) GetAdminOwnerId() string {
	if o == nil || isNil(o.AdminOwnerId) {
		var ret string
		return ret
	}
	return *o.AdminOwnerId
}

// GetAdminOwnerIdOk returns a tuple with the AdminOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetAdminOwnerIdOk() (*string, bool) {
	if o == nil || isNil(o.AdminOwnerId) {
    return nil, false
	}
	return o.AdminOwnerId, true
}

// HasAdminOwnerId returns a boolean if a field has been set.
func (o *Group) HasAdminOwnerId() bool {
	if o != nil && !isNil(o.AdminOwnerId) {
		return true
	}

	return false
}

// SetAdminOwnerId gets a reference to the given string and assigns it to the AdminOwnerId field.
func (o *Group) SetAdminOwnerId(v string) {
	o.AdminOwnerId = &v
}

// GetRemoteId returns the RemoteId field value if set, zero value otherwise.
func (o *Group) GetRemoteId() string {
	if o == nil || isNil(o.RemoteId) {
		var ret string
		return ret
	}
	return *o.RemoteId
}

// GetRemoteIdOk returns a tuple with the RemoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetRemoteIdOk() (*string, bool) {
	if o == nil || isNil(o.RemoteId) {
    return nil, false
	}
	return o.RemoteId, true
}

// HasRemoteId returns a boolean if a field has been set.
func (o *Group) HasRemoteId() bool {
	if o != nil && !isNil(o.RemoteId) {
		return true
	}

	return false
}

// SetRemoteId gets a reference to the given string and assigns it to the RemoteId field.
func (o *Group) SetRemoteId(v string) {
	o.RemoteId = &v
}

// GetRemoteName returns the RemoteName field value if set, zero value otherwise.
func (o *Group) GetRemoteName() string {
	if o == nil || isNil(o.RemoteName) {
		var ret string
		return ret
	}
	return *o.RemoteName
}

// GetRemoteNameOk returns a tuple with the RemoteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetRemoteNameOk() (*string, bool) {
	if o == nil || isNil(o.RemoteName) {
    return nil, false
	}
	return o.RemoteName, true
}

// HasRemoteName returns a boolean if a field has been set.
func (o *Group) HasRemoteName() bool {
	if o != nil && !isNil(o.RemoteName) {
		return true
	}

	return false
}

// SetRemoteName gets a reference to the given string and assigns it to the RemoteName field.
func (o *Group) SetRemoteName(v string) {
	o.RemoteName = &v
}

// GetGroupType returns the GroupType field value if set, zero value otherwise.
func (o *Group) GetGroupType() GroupTypeEnum {
	if o == nil || isNil(o.GroupType) {
		var ret GroupTypeEnum
		return ret
	}
	return *o.GroupType
}

// GetGroupTypeOk returns a tuple with the GroupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetGroupTypeOk() (*GroupTypeEnum, bool) {
	if o == nil || isNil(o.GroupType) {
    return nil, false
	}
	return o.GroupType, true
}

// HasGroupType returns a boolean if a field has been set.
func (o *Group) HasGroupType() bool {
	if o != nil && !isNil(o.GroupType) {
		return true
	}

	return false
}

// SetGroupType gets a reference to the given GroupTypeEnum and assigns it to the GroupType field.
func (o *Group) SetGroupType(v GroupTypeEnum) {
	o.GroupType = &v
}

// GetMaxDuration returns the MaxDuration field value if set, zero value otherwise.
func (o *Group) GetMaxDuration() int32 {
	if o == nil || isNil(o.MaxDuration) {
		var ret int32
		return ret
	}
	return *o.MaxDuration
}

// GetMaxDurationOk returns a tuple with the MaxDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetMaxDurationOk() (*int32, bool) {
	if o == nil || isNil(o.MaxDuration) {
    return nil, false
	}
	return o.MaxDuration, true
}

// HasMaxDuration returns a boolean if a field has been set.
func (o *Group) HasMaxDuration() bool {
	if o != nil && !isNil(o.MaxDuration) {
		return true
	}

	return false
}

// SetMaxDuration gets a reference to the given int32 and assigns it to the MaxDuration field.
func (o *Group) SetMaxDuration(v int32) {
	o.MaxDuration = &v
}

// GetRecommendedDuration returns the RecommendedDuration field value if set, zero value otherwise.
func (o *Group) GetRecommendedDuration() int32 {
	if o == nil || isNil(o.RecommendedDuration) {
		var ret int32
		return ret
	}
	return *o.RecommendedDuration
}

// GetRecommendedDurationOk returns a tuple with the RecommendedDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetRecommendedDurationOk() (*int32, bool) {
	if o == nil || isNil(o.RecommendedDuration) {
    return nil, false
	}
	return o.RecommendedDuration, true
}

// HasRecommendedDuration returns a boolean if a field has been set.
func (o *Group) HasRecommendedDuration() bool {
	if o != nil && !isNil(o.RecommendedDuration) {
		return true
	}

	return false
}

// SetRecommendedDuration gets a reference to the given int32 and assigns it to the RecommendedDuration field.
func (o *Group) SetRecommendedDuration(v int32) {
	o.RecommendedDuration = &v
}

// GetRequireManagerApproval returns the RequireManagerApproval field value if set, zero value otherwise.
// Deprecated
func (o *Group) GetRequireManagerApproval() bool {
	if o == nil || isNil(o.RequireManagerApproval) {
		var ret bool
		return ret
	}
	return *o.RequireManagerApproval
}

// GetRequireManagerApprovalOk returns a tuple with the RequireManagerApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Group) GetRequireManagerApprovalOk() (*bool, bool) {
	if o == nil || isNil(o.RequireManagerApproval) {
    return nil, false
	}
	return o.RequireManagerApproval, true
}

// HasRequireManagerApproval returns a boolean if a field has been set.
func (o *Group) HasRequireManagerApproval() bool {
	if o != nil && !isNil(o.RequireManagerApproval) {
		return true
	}

	return false
}

// SetRequireManagerApproval gets a reference to the given bool and assigns it to the RequireManagerApproval field.
// Deprecated
func (o *Group) SetRequireManagerApproval(v bool) {
	o.RequireManagerApproval = &v
}

// GetRequireSupportTicket returns the RequireSupportTicket field value if set, zero value otherwise.
func (o *Group) GetRequireSupportTicket() bool {
	if o == nil || isNil(o.RequireSupportTicket) {
		var ret bool
		return ret
	}
	return *o.RequireSupportTicket
}

// GetRequireSupportTicketOk returns a tuple with the RequireSupportTicket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetRequireSupportTicketOk() (*bool, bool) {
	if o == nil || isNil(o.RequireSupportTicket) {
    return nil, false
	}
	return o.RequireSupportTicket, true
}

// HasRequireSupportTicket returns a boolean if a field has been set.
func (o *Group) HasRequireSupportTicket() bool {
	if o != nil && !isNil(o.RequireSupportTicket) {
		return true
	}

	return false
}

// SetRequireSupportTicket gets a reference to the given bool and assigns it to the RequireSupportTicket field.
func (o *Group) SetRequireSupportTicket(v bool) {
	o.RequireSupportTicket = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *Group) GetFolderId() string {
	if o == nil || isNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetFolderIdOk() (*string, bool) {
	if o == nil || isNil(o.FolderId) {
    return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *Group) HasFolderId() bool {
	if o != nil && !isNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *Group) SetFolderId(v string) {
	o.FolderId = &v
}

// GetRequireMfaToApprove returns the RequireMfaToApprove field value if set, zero value otherwise.
func (o *Group) GetRequireMfaToApprove() bool {
	if o == nil || isNil(o.RequireMfaToApprove) {
		var ret bool
		return ret
	}
	return *o.RequireMfaToApprove
}

// GetRequireMfaToApproveOk returns a tuple with the RequireMfaToApprove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetRequireMfaToApproveOk() (*bool, bool) {
	if o == nil || isNil(o.RequireMfaToApprove) {
    return nil, false
	}
	return o.RequireMfaToApprove, true
}

// HasRequireMfaToApprove returns a boolean if a field has been set.
func (o *Group) HasRequireMfaToApprove() bool {
	if o != nil && !isNil(o.RequireMfaToApprove) {
		return true
	}

	return false
}

// SetRequireMfaToApprove gets a reference to the given bool and assigns it to the RequireMfaToApprove field.
func (o *Group) SetRequireMfaToApprove(v bool) {
	o.RequireMfaToApprove = &v
}

// GetRequireMfaToRequest returns the RequireMfaToRequest field value if set, zero value otherwise.
func (o *Group) GetRequireMfaToRequest() bool {
	if o == nil || isNil(o.RequireMfaToRequest) {
		var ret bool
		return ret
	}
	return *o.RequireMfaToRequest
}

// GetRequireMfaToRequestOk returns a tuple with the RequireMfaToRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetRequireMfaToRequestOk() (*bool, bool) {
	if o == nil || isNil(o.RequireMfaToRequest) {
    return nil, false
	}
	return o.RequireMfaToRequest, true
}

// HasRequireMfaToRequest returns a boolean if a field has been set.
func (o *Group) HasRequireMfaToRequest() bool {
	if o != nil && !isNil(o.RequireMfaToRequest) {
		return true
	}

	return false
}

// SetRequireMfaToRequest gets a reference to the given bool and assigns it to the RequireMfaToRequest field.
func (o *Group) SetRequireMfaToRequest(v bool) {
	o.RequireMfaToRequest = &v
}

// GetAutoApproval returns the AutoApproval field value if set, zero value otherwise.
func (o *Group) GetAutoApproval() bool {
	if o == nil || isNil(o.AutoApproval) {
		var ret bool
		return ret
	}
	return *o.AutoApproval
}

// GetAutoApprovalOk returns a tuple with the AutoApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetAutoApprovalOk() (*bool, bool) {
	if o == nil || isNil(o.AutoApproval) {
    return nil, false
	}
	return o.AutoApproval, true
}

// HasAutoApproval returns a boolean if a field has been set.
func (o *Group) HasAutoApproval() bool {
	if o != nil && !isNil(o.AutoApproval) {
		return true
	}

	return false
}

// SetAutoApproval gets a reference to the given bool and assigns it to the AutoApproval field.
func (o *Group) SetAutoApproval(v bool) {
	o.AutoApproval = &v
}

// GetRequestTemplateId returns the RequestTemplateId field value if set, zero value otherwise.
func (o *Group) GetRequestTemplateId() string {
	if o == nil || isNil(o.RequestTemplateId) {
		var ret string
		return ret
	}
	return *o.RequestTemplateId
}

// GetRequestTemplateIdOk returns a tuple with the RequestTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetRequestTemplateIdOk() (*string, bool) {
	if o == nil || isNil(o.RequestTemplateId) {
    return nil, false
	}
	return o.RequestTemplateId, true
}

// HasRequestTemplateId returns a boolean if a field has been set.
func (o *Group) HasRequestTemplateId() bool {
	if o != nil && !isNil(o.RequestTemplateId) {
		return true
	}

	return false
}

// SetRequestTemplateId gets a reference to the given string and assigns it to the RequestTemplateId field.
func (o *Group) SetRequestTemplateId(v string) {
	o.RequestTemplateId = &v
}

// GetIsRequestable returns the IsRequestable field value if set, zero value otherwise.
func (o *Group) GetIsRequestable() bool {
	if o == nil || isNil(o.IsRequestable) {
		var ret bool
		return ret
	}
	return *o.IsRequestable
}

// GetIsRequestableOk returns a tuple with the IsRequestable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetIsRequestableOk() (*bool, bool) {
	if o == nil || isNil(o.IsRequestable) {
    return nil, false
	}
	return o.IsRequestable, true
}

// HasIsRequestable returns a boolean if a field has been set.
func (o *Group) HasIsRequestable() bool {
	if o != nil && !isNil(o.IsRequestable) {
		return true
	}

	return false
}

// SetIsRequestable gets a reference to the given bool and assigns it to the IsRequestable field.
func (o *Group) SetIsRequestable(v bool) {
	o.IsRequestable = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Group) GetMetadata() string {
	if o == nil || isNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Group) GetMetadataOk() (*string, bool) {
	if o == nil || isNil(o.Metadata) {
    return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Group) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *Group) SetMetadata(v string) {
	o.Metadata = &v
}

func (o Group) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group_id"] = o.GroupId
	}
	if !isNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.AdminOwnerId) {
		toSerialize["admin_owner_id"] = o.AdminOwnerId
	}
	if !isNil(o.RemoteId) {
		toSerialize["remote_id"] = o.RemoteId
	}
	if !isNil(o.RemoteName) {
		toSerialize["remote_name"] = o.RemoteName
	}
	if !isNil(o.GroupType) {
		toSerialize["group_type"] = o.GroupType
	}
	if !isNil(o.MaxDuration) {
		toSerialize["max_duration"] = o.MaxDuration
	}
	if !isNil(o.RecommendedDuration) {
		toSerialize["recommended_duration"] = o.RecommendedDuration
	}
	if !isNil(o.RequireManagerApproval) {
		toSerialize["require_manager_approval"] = o.RequireManagerApproval
	}
	if !isNil(o.RequireSupportTicket) {
		toSerialize["require_support_ticket"] = o.RequireSupportTicket
	}
	if !isNil(o.FolderId) {
		toSerialize["folder_id"] = o.FolderId
	}
	if !isNil(o.RequireMfaToApprove) {
		toSerialize["require_mfa_to_approve"] = o.RequireMfaToApprove
	}
	if !isNil(o.RequireMfaToRequest) {
		toSerialize["require_mfa_to_request"] = o.RequireMfaToRequest
	}
	if !isNil(o.AutoApproval) {
		toSerialize["auto_approval"] = o.AutoApproval
	}
	if !isNil(o.RequestTemplateId) {
		toSerialize["request_template_id"] = o.RequestTemplateId
	}
	if !isNil(o.IsRequestable) {
		toSerialize["is_requestable"] = o.IsRequestable
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableGroup struct {
	value *Group
	isSet bool
}

func (v NullableGroup) Get() *Group {
	return v.value
}

func (v *NullableGroup) Set(val *Group) {
	v.value = val
	v.isSet = true
}

func (v NullableGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroup(val *Group) *NullableGroup {
	return &NullableGroup{value: val, isSet: true}
}

func (v NullableGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


