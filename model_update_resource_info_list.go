/*
Opal API

Your Home For Developer Resources.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// UpdateResourceInfoList struct for UpdateResourceInfoList
type UpdateResourceInfoList struct {
	// A list of resources with information to update.
	Resources []UpdateResourceInfo `json:"resources"`
}

// NewUpdateResourceInfoList instantiates a new UpdateResourceInfoList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateResourceInfoList(resources []UpdateResourceInfo) *UpdateResourceInfoList {
	this := UpdateResourceInfoList{}
	this.Resources = resources
	return &this
}

// NewUpdateResourceInfoListWithDefaults instantiates a new UpdateResourceInfoList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateResourceInfoListWithDefaults() *UpdateResourceInfoList {
	this := UpdateResourceInfoList{}
	return &this
}

// GetResources returns the Resources field value
func (o *UpdateResourceInfoList) GetResources() []UpdateResourceInfo {
	if o == nil {
		var ret []UpdateResourceInfo
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *UpdateResourceInfoList) GetResourcesOk() ([]UpdateResourceInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Resources, true
}

// SetResources sets field value
func (o *UpdateResourceInfoList) SetResources(v []UpdateResourceInfo) {
	o.Resources = v
}

func (o UpdateResourceInfoList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateResourceInfoList struct {
	value *UpdateResourceInfoList
	isSet bool
}

func (v NullableUpdateResourceInfoList) Get() *UpdateResourceInfoList {
	return v.value
}

func (v *NullableUpdateResourceInfoList) Set(val *UpdateResourceInfoList) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateResourceInfoList) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateResourceInfoList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateResourceInfoList(val *UpdateResourceInfoList) *NullableUpdateResourceInfoList {
	return &NullableUpdateResourceInfoList{value: val, isSet: true}
}

func (v NullableUpdateResourceInfoList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateResourceInfoList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


