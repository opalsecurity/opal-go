/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"fmt"
)

// checks if the RequestCustomFieldResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestCustomFieldResponse{}

// RequestCustomFieldResponse struct for RequestCustomFieldResponse
type RequestCustomFieldResponse struct {
	FieldName string `json:"field_name"`
	FieldType RequestTemplateCustomFieldTypeEnum `json:"field_type"`
	FieldValue RequestCustomFieldResponseFieldValue `json:"field_value"`
	AdditionalProperties map[string]interface{}
}

type _RequestCustomFieldResponse RequestCustomFieldResponse

// NewRequestCustomFieldResponse instantiates a new RequestCustomFieldResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestCustomFieldResponse(fieldName string, fieldType RequestTemplateCustomFieldTypeEnum, fieldValue RequestCustomFieldResponseFieldValue) *RequestCustomFieldResponse {
	this := RequestCustomFieldResponse{}
	this.FieldName = fieldName
	this.FieldType = fieldType
	this.FieldValue = fieldValue
	return &this
}

// NewRequestCustomFieldResponseWithDefaults instantiates a new RequestCustomFieldResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestCustomFieldResponseWithDefaults() *RequestCustomFieldResponse {
	this := RequestCustomFieldResponse{}
	return &this
}

// GetFieldName returns the FieldName field value
func (o *RequestCustomFieldResponse) GetFieldName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value
// and a boolean to check if the value has been set.
func (o *RequestCustomFieldResponse) GetFieldNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldName, true
}

// SetFieldName sets field value
func (o *RequestCustomFieldResponse) SetFieldName(v string) {
	o.FieldName = v
}

// GetFieldType returns the FieldType field value
func (o *RequestCustomFieldResponse) GetFieldType() RequestTemplateCustomFieldTypeEnum {
	if o == nil {
		var ret RequestTemplateCustomFieldTypeEnum
		return ret
	}

	return o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value
// and a boolean to check if the value has been set.
func (o *RequestCustomFieldResponse) GetFieldTypeOk() (*RequestTemplateCustomFieldTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldType, true
}

// SetFieldType sets field value
func (o *RequestCustomFieldResponse) SetFieldType(v RequestTemplateCustomFieldTypeEnum) {
	o.FieldType = v
}

// GetFieldValue returns the FieldValue field value
func (o *RequestCustomFieldResponse) GetFieldValue() RequestCustomFieldResponseFieldValue {
	if o == nil {
		var ret RequestCustomFieldResponseFieldValue
		return ret
	}

	return o.FieldValue
}

// GetFieldValueOk returns a tuple with the FieldValue field value
// and a boolean to check if the value has been set.
func (o *RequestCustomFieldResponse) GetFieldValueOk() (*RequestCustomFieldResponseFieldValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldValue, true
}

// SetFieldValue sets field value
func (o *RequestCustomFieldResponse) SetFieldValue(v RequestCustomFieldResponseFieldValue) {
	o.FieldValue = v
}

func (o RequestCustomFieldResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestCustomFieldResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field_name"] = o.FieldName
	toSerialize["field_type"] = o.FieldType
	toSerialize["field_value"] = o.FieldValue

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RequestCustomFieldResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"field_name",
		"field_type",
		"field_value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestCustomFieldResponse := _RequestCustomFieldResponse{}

	err = json.Unmarshal(data, &varRequestCustomFieldResponse)

	if err != nil {
		return err
	}

	*o = RequestCustomFieldResponse(varRequestCustomFieldResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "field_name")
		delete(additionalProperties, "field_type")
		delete(additionalProperties, "field_value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRequestCustomFieldResponse struct {
	value *RequestCustomFieldResponse
	isSet bool
}

func (v NullableRequestCustomFieldResponse) Get() *RequestCustomFieldResponse {
	return v.value
}

func (v *NullableRequestCustomFieldResponse) Set(val *RequestCustomFieldResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestCustomFieldResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestCustomFieldResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestCustomFieldResponse(val *RequestCustomFieldResponse) *NullableRequestCustomFieldResponse {
	return &NullableRequestCustomFieldResponse{value: val, isSet: true}
}

func (v NullableRequestCustomFieldResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestCustomFieldResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


