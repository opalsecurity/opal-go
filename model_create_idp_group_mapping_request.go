/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// checks if the CreateIdpGroupMappingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIdpGroupMappingRequest{}

// CreateIdpGroupMappingRequest struct for CreateIdpGroupMappingRequest
type CreateIdpGroupMappingRequest struct {
	// Optional alias for the group mapping
	Alias *string `json:"alias,omitempty"`
	// Whether this mapping should be hidden from end users. - **New mappings**: If not provided, defaults to `false` - **Existing mappings**: If not provided, existing value is preserved (no change) - **Explicit values**: If provided, value is updated to the specified boolean 
	HiddenFromEndUser *bool `json:"hidden_from_end_user,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateIdpGroupMappingRequest CreateIdpGroupMappingRequest

// NewCreateIdpGroupMappingRequest instantiates a new CreateIdpGroupMappingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIdpGroupMappingRequest() *CreateIdpGroupMappingRequest {
	this := CreateIdpGroupMappingRequest{}
	return &this
}

// NewCreateIdpGroupMappingRequestWithDefaults instantiates a new CreateIdpGroupMappingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIdpGroupMappingRequestWithDefaults() *CreateIdpGroupMappingRequest {
	this := CreateIdpGroupMappingRequest{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *CreateIdpGroupMappingRequest) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIdpGroupMappingRequest) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *CreateIdpGroupMappingRequest) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *CreateIdpGroupMappingRequest) SetAlias(v string) {
	o.Alias = &v
}

// GetHiddenFromEndUser returns the HiddenFromEndUser field value if set, zero value otherwise.
func (o *CreateIdpGroupMappingRequest) GetHiddenFromEndUser() bool {
	if o == nil || IsNil(o.HiddenFromEndUser) {
		var ret bool
		return ret
	}
	return *o.HiddenFromEndUser
}

// GetHiddenFromEndUserOk returns a tuple with the HiddenFromEndUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIdpGroupMappingRequest) GetHiddenFromEndUserOk() (*bool, bool) {
	if o == nil || IsNil(o.HiddenFromEndUser) {
		return nil, false
	}
	return o.HiddenFromEndUser, true
}

// HasHiddenFromEndUser returns a boolean if a field has been set.
func (o *CreateIdpGroupMappingRequest) HasHiddenFromEndUser() bool {
	if o != nil && !IsNil(o.HiddenFromEndUser) {
		return true
	}

	return false
}

// SetHiddenFromEndUser gets a reference to the given bool and assigns it to the HiddenFromEndUser field.
func (o *CreateIdpGroupMappingRequest) SetHiddenFromEndUser(v bool) {
	o.HiddenFromEndUser = &v
}

func (o CreateIdpGroupMappingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIdpGroupMappingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.HiddenFromEndUser) {
		toSerialize["hidden_from_end_user"] = o.HiddenFromEndUser
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateIdpGroupMappingRequest) UnmarshalJSON(data []byte) (err error) {
	varCreateIdpGroupMappingRequest := _CreateIdpGroupMappingRequest{}

	err = json.Unmarshal(data, &varCreateIdpGroupMappingRequest)

	if err != nil {
		return err
	}

	*o = CreateIdpGroupMappingRequest(varCreateIdpGroupMappingRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alias")
		delete(additionalProperties, "hidden_from_end_user")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateIdpGroupMappingRequest struct {
	value *CreateIdpGroupMappingRequest
	isSet bool
}

func (v NullableCreateIdpGroupMappingRequest) Get() *CreateIdpGroupMappingRequest {
	return v.value
}

func (v *NullableCreateIdpGroupMappingRequest) Set(val *CreateIdpGroupMappingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIdpGroupMappingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIdpGroupMappingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIdpGroupMappingRequest(val *CreateIdpGroupMappingRequest) *NullableCreateIdpGroupMappingRequest {
	return &NullableCreateIdpGroupMappingRequest{value: val, isSet: true}
}

func (v NullableCreateIdpGroupMappingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIdpGroupMappingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


