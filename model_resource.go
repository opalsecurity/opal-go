/*
Opal API

The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
	"fmt"
)

// checks if the Resource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Resource{}

// Resource # Resource Object ### Description The `Resource` object is used to represent a resource.  ### Usage Example Update from the `UPDATE Resources` endpoint.
type Resource struct {
	// The ID of the resource.
	ResourceId string `json:"resource_id"`
	// The ID of the app.
	AppId *string `json:"app_id,omitempty"`
	// The name of the resource.
	Name *string `json:"name,omitempty"`
	// A description of the resource.
	Description *string `json:"description,omitempty"`
	// The ID of the owner of the resource.
	AdminOwnerId *string `json:"admin_owner_id,omitempty"`
	// The ID of the resource on the remote system.
	RemoteResourceId *string `json:"remote_resource_id,omitempty"`
	// The name of the resource on the remote system.
	RemoteResourceName *string `json:"remote_resource_name,omitempty"`
	ResourceType *ResourceTypeEnum `json:"resource_type,omitempty"`
	// The maximum duration for which the resource can be requested (in minutes).
	MaxDuration *int32 `json:"max_duration,omitempty"`
	// The recommended duration for which the resource should be requested (in minutes). -1 represents an indefinite duration.
	RecommendedDuration *int32 `json:"recommended_duration,omitempty"`
	// The duration for which access can be extended (in minutes). Set to 0 to disable extensions. When > 0, extensions are enabled for the specified duration.
	ExtensionsDurationInMinutes *int32 `json:"extensions_duration_in_minutes,omitempty"`
	// A bool representing whether or not access requests to the resource require manager approval.
	// Deprecated
	RequireManagerApproval *bool `json:"require_manager_approval,omitempty"`
	// A bool representing whether or not access requests to the resource require an access ticket.
	RequireSupportTicket *bool `json:"require_support_ticket,omitempty"`
	// A bool representing whether or not to require MFA for reviewers to approve requests for this resource.
	RequireMfaToApprove *bool `json:"require_mfa_to_approve,omitempty"`
	// A bool representing whether or not to require MFA for requesting access to this resource.
	RequireMfaToRequest *bool `json:"require_mfa_to_request,omitempty"`
	// A bool representing whether or not to require MFA to connect to this resource.
	RequireMfaToConnect *bool `json:"require_mfa_to_connect,omitempty"`
	// A bool representing whether or not to automatically approve requests to this resource.
	AutoApproval *bool `json:"auto_approval,omitempty"`
	// The ID of the associated request template.
	RequestTemplateId *string `json:"request_template_id,omitempty"`
	// A bool representing whether or not to allow access requests to this resource.
	IsRequestable *bool `json:"is_requestable,omitempty"`
	// The ID of the parent resource.
	ParentResourceId *string `json:"parent_resource_id,omitempty"`
	// The ID of the associated configuration template.
	ConfigurationTemplateId *string `json:"configuration_template_id,omitempty"`
	// A list of configurations for requests to this resource.
	RequestConfigurations []RequestConfiguration `json:"request_configurations,omitempty"`
	// A list of configurations for requests to this resource. Deprecated in favor of `request_configurations`.
	RequestConfigurationList []RequestConfiguration `json:"request_configuration_list,omitempty"`
	TicketPropagation *TicketPropagationConfiguration `json:"ticket_propagation,omitempty"`
	// Custom request notification sent upon request approval.
	CustomRequestNotification *string `json:"custom_request_notification,omitempty"`
	// The risk sensitivity level for the resource. When an override is set, this field will match that.
	RiskSensitivity *RiskSensitivityEnum `json:"risk_sensitivity,omitempty"`
	RiskSensitivityOverride *RiskSensitivityEnum `json:"risk_sensitivity_override,omitempty"`
	// JSON metadata about the remote resource. Only set for items linked to remote systems. See [this guide](https://docs.opal.dev/reference/end-system-objects) for details.
	// Deprecated
	Metadata *string `json:"metadata,omitempty"`
	RemoteInfo *ResourceRemoteInfo `json:"remote_info,omitempty"`
	// List of resource IDs that are ancestors of this resource.
	AncestorResourceIds []string `json:"ancestor_resource_ids,omitempty"`
	// List of resource IDs that are descendants of this resource.
	DescendantResourceIds []string `json:"descendant_resource_ids,omitempty"`
	LastSuccessfulSync *SyncTask `json:"last_successful_sync,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Resource Resource

// NewResource instantiates a new Resource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResource(resourceId string) *Resource {
	this := Resource{}
	this.ResourceId = resourceId
	return &this
}

// NewResourceWithDefaults instantiates a new Resource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceWithDefaults() *Resource {
	this := Resource{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *Resource) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *Resource) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *Resource) SetResourceId(v string) {
	o.ResourceId = v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *Resource) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *Resource) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *Resource) SetAppId(v string) {
	o.AppId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Resource) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Resource) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Resource) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Resource) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Resource) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Resource) SetDescription(v string) {
	o.Description = &v
}

// GetAdminOwnerId returns the AdminOwnerId field value if set, zero value otherwise.
func (o *Resource) GetAdminOwnerId() string {
	if o == nil || IsNil(o.AdminOwnerId) {
		var ret string
		return ret
	}
	return *o.AdminOwnerId
}

// GetAdminOwnerIdOk returns a tuple with the AdminOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetAdminOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdminOwnerId) {
		return nil, false
	}
	return o.AdminOwnerId, true
}

// HasAdminOwnerId returns a boolean if a field has been set.
func (o *Resource) HasAdminOwnerId() bool {
	if o != nil && !IsNil(o.AdminOwnerId) {
		return true
	}

	return false
}

// SetAdminOwnerId gets a reference to the given string and assigns it to the AdminOwnerId field.
func (o *Resource) SetAdminOwnerId(v string) {
	o.AdminOwnerId = &v
}

// GetRemoteResourceId returns the RemoteResourceId field value if set, zero value otherwise.
func (o *Resource) GetRemoteResourceId() string {
	if o == nil || IsNil(o.RemoteResourceId) {
		var ret string
		return ret
	}
	return *o.RemoteResourceId
}

// GetRemoteResourceIdOk returns a tuple with the RemoteResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRemoteResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteResourceId) {
		return nil, false
	}
	return o.RemoteResourceId, true
}

// HasRemoteResourceId returns a boolean if a field has been set.
func (o *Resource) HasRemoteResourceId() bool {
	if o != nil && !IsNil(o.RemoteResourceId) {
		return true
	}

	return false
}

// SetRemoteResourceId gets a reference to the given string and assigns it to the RemoteResourceId field.
func (o *Resource) SetRemoteResourceId(v string) {
	o.RemoteResourceId = &v
}

// GetRemoteResourceName returns the RemoteResourceName field value if set, zero value otherwise.
func (o *Resource) GetRemoteResourceName() string {
	if o == nil || IsNil(o.RemoteResourceName) {
		var ret string
		return ret
	}
	return *o.RemoteResourceName
}

// GetRemoteResourceNameOk returns a tuple with the RemoteResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRemoteResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteResourceName) {
		return nil, false
	}
	return o.RemoteResourceName, true
}

// HasRemoteResourceName returns a boolean if a field has been set.
func (o *Resource) HasRemoteResourceName() bool {
	if o != nil && !IsNil(o.RemoteResourceName) {
		return true
	}

	return false
}

// SetRemoteResourceName gets a reference to the given string and assigns it to the RemoteResourceName field.
func (o *Resource) SetRemoteResourceName(v string) {
	o.RemoteResourceName = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *Resource) GetResourceType() ResourceTypeEnum {
	if o == nil || IsNil(o.ResourceType) {
		var ret ResourceTypeEnum
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetResourceTypeOk() (*ResourceTypeEnum, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *Resource) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given ResourceTypeEnum and assigns it to the ResourceType field.
func (o *Resource) SetResourceType(v ResourceTypeEnum) {
	o.ResourceType = &v
}

// GetMaxDuration returns the MaxDuration field value if set, zero value otherwise.
func (o *Resource) GetMaxDuration() int32 {
	if o == nil || IsNil(o.MaxDuration) {
		var ret int32
		return ret
	}
	return *o.MaxDuration
}

// GetMaxDurationOk returns a tuple with the MaxDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetMaxDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDuration) {
		return nil, false
	}
	return o.MaxDuration, true
}

// HasMaxDuration returns a boolean if a field has been set.
func (o *Resource) HasMaxDuration() bool {
	if o != nil && !IsNil(o.MaxDuration) {
		return true
	}

	return false
}

// SetMaxDuration gets a reference to the given int32 and assigns it to the MaxDuration field.
func (o *Resource) SetMaxDuration(v int32) {
	o.MaxDuration = &v
}

// GetRecommendedDuration returns the RecommendedDuration field value if set, zero value otherwise.
func (o *Resource) GetRecommendedDuration() int32 {
	if o == nil || IsNil(o.RecommendedDuration) {
		var ret int32
		return ret
	}
	return *o.RecommendedDuration
}

// GetRecommendedDurationOk returns a tuple with the RecommendedDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRecommendedDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.RecommendedDuration) {
		return nil, false
	}
	return o.RecommendedDuration, true
}

// HasRecommendedDuration returns a boolean if a field has been set.
func (o *Resource) HasRecommendedDuration() bool {
	if o != nil && !IsNil(o.RecommendedDuration) {
		return true
	}

	return false
}

// SetRecommendedDuration gets a reference to the given int32 and assigns it to the RecommendedDuration field.
func (o *Resource) SetRecommendedDuration(v int32) {
	o.RecommendedDuration = &v
}

// GetExtensionsDurationInMinutes returns the ExtensionsDurationInMinutes field value if set, zero value otherwise.
func (o *Resource) GetExtensionsDurationInMinutes() int32 {
	if o == nil || IsNil(o.ExtensionsDurationInMinutes) {
		var ret int32
		return ret
	}
	return *o.ExtensionsDurationInMinutes
}

// GetExtensionsDurationInMinutesOk returns a tuple with the ExtensionsDurationInMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetExtensionsDurationInMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtensionsDurationInMinutes) {
		return nil, false
	}
	return o.ExtensionsDurationInMinutes, true
}

// HasExtensionsDurationInMinutes returns a boolean if a field has been set.
func (o *Resource) HasExtensionsDurationInMinutes() bool {
	if o != nil && !IsNil(o.ExtensionsDurationInMinutes) {
		return true
	}

	return false
}

// SetExtensionsDurationInMinutes gets a reference to the given int32 and assigns it to the ExtensionsDurationInMinutes field.
func (o *Resource) SetExtensionsDurationInMinutes(v int32) {
	o.ExtensionsDurationInMinutes = &v
}

// GetRequireManagerApproval returns the RequireManagerApproval field value if set, zero value otherwise.
// Deprecated
func (o *Resource) GetRequireManagerApproval() bool {
	if o == nil || IsNil(o.RequireManagerApproval) {
		var ret bool
		return ret
	}
	return *o.RequireManagerApproval
}

// GetRequireManagerApprovalOk returns a tuple with the RequireManagerApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Resource) GetRequireManagerApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireManagerApproval) {
		return nil, false
	}
	return o.RequireManagerApproval, true
}

// HasRequireManagerApproval returns a boolean if a field has been set.
func (o *Resource) HasRequireManagerApproval() bool {
	if o != nil && !IsNil(o.RequireManagerApproval) {
		return true
	}

	return false
}

// SetRequireManagerApproval gets a reference to the given bool and assigns it to the RequireManagerApproval field.
// Deprecated
func (o *Resource) SetRequireManagerApproval(v bool) {
	o.RequireManagerApproval = &v
}

// GetRequireSupportTicket returns the RequireSupportTicket field value if set, zero value otherwise.
func (o *Resource) GetRequireSupportTicket() bool {
	if o == nil || IsNil(o.RequireSupportTicket) {
		var ret bool
		return ret
	}
	return *o.RequireSupportTicket
}

// GetRequireSupportTicketOk returns a tuple with the RequireSupportTicket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRequireSupportTicketOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireSupportTicket) {
		return nil, false
	}
	return o.RequireSupportTicket, true
}

// HasRequireSupportTicket returns a boolean if a field has been set.
func (o *Resource) HasRequireSupportTicket() bool {
	if o != nil && !IsNil(o.RequireSupportTicket) {
		return true
	}

	return false
}

// SetRequireSupportTicket gets a reference to the given bool and assigns it to the RequireSupportTicket field.
func (o *Resource) SetRequireSupportTicket(v bool) {
	o.RequireSupportTicket = &v
}

// GetRequireMfaToApprove returns the RequireMfaToApprove field value if set, zero value otherwise.
func (o *Resource) GetRequireMfaToApprove() bool {
	if o == nil || IsNil(o.RequireMfaToApprove) {
		var ret bool
		return ret
	}
	return *o.RequireMfaToApprove
}

// GetRequireMfaToApproveOk returns a tuple with the RequireMfaToApprove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRequireMfaToApproveOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireMfaToApprove) {
		return nil, false
	}
	return o.RequireMfaToApprove, true
}

// HasRequireMfaToApprove returns a boolean if a field has been set.
func (o *Resource) HasRequireMfaToApprove() bool {
	if o != nil && !IsNil(o.RequireMfaToApprove) {
		return true
	}

	return false
}

// SetRequireMfaToApprove gets a reference to the given bool and assigns it to the RequireMfaToApprove field.
func (o *Resource) SetRequireMfaToApprove(v bool) {
	o.RequireMfaToApprove = &v
}

// GetRequireMfaToRequest returns the RequireMfaToRequest field value if set, zero value otherwise.
func (o *Resource) GetRequireMfaToRequest() bool {
	if o == nil || IsNil(o.RequireMfaToRequest) {
		var ret bool
		return ret
	}
	return *o.RequireMfaToRequest
}

// GetRequireMfaToRequestOk returns a tuple with the RequireMfaToRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRequireMfaToRequestOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireMfaToRequest) {
		return nil, false
	}
	return o.RequireMfaToRequest, true
}

// HasRequireMfaToRequest returns a boolean if a field has been set.
func (o *Resource) HasRequireMfaToRequest() bool {
	if o != nil && !IsNil(o.RequireMfaToRequest) {
		return true
	}

	return false
}

// SetRequireMfaToRequest gets a reference to the given bool and assigns it to the RequireMfaToRequest field.
func (o *Resource) SetRequireMfaToRequest(v bool) {
	o.RequireMfaToRequest = &v
}

// GetRequireMfaToConnect returns the RequireMfaToConnect field value if set, zero value otherwise.
func (o *Resource) GetRequireMfaToConnect() bool {
	if o == nil || IsNil(o.RequireMfaToConnect) {
		var ret bool
		return ret
	}
	return *o.RequireMfaToConnect
}

// GetRequireMfaToConnectOk returns a tuple with the RequireMfaToConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRequireMfaToConnectOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireMfaToConnect) {
		return nil, false
	}
	return o.RequireMfaToConnect, true
}

// HasRequireMfaToConnect returns a boolean if a field has been set.
func (o *Resource) HasRequireMfaToConnect() bool {
	if o != nil && !IsNil(o.RequireMfaToConnect) {
		return true
	}

	return false
}

// SetRequireMfaToConnect gets a reference to the given bool and assigns it to the RequireMfaToConnect field.
func (o *Resource) SetRequireMfaToConnect(v bool) {
	o.RequireMfaToConnect = &v
}

// GetAutoApproval returns the AutoApproval field value if set, zero value otherwise.
func (o *Resource) GetAutoApproval() bool {
	if o == nil || IsNil(o.AutoApproval) {
		var ret bool
		return ret
	}
	return *o.AutoApproval
}

// GetAutoApprovalOk returns a tuple with the AutoApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetAutoApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoApproval) {
		return nil, false
	}
	return o.AutoApproval, true
}

// HasAutoApproval returns a boolean if a field has been set.
func (o *Resource) HasAutoApproval() bool {
	if o != nil && !IsNil(o.AutoApproval) {
		return true
	}

	return false
}

// SetAutoApproval gets a reference to the given bool and assigns it to the AutoApproval field.
func (o *Resource) SetAutoApproval(v bool) {
	o.AutoApproval = &v
}

// GetRequestTemplateId returns the RequestTemplateId field value if set, zero value otherwise.
func (o *Resource) GetRequestTemplateId() string {
	if o == nil || IsNil(o.RequestTemplateId) {
		var ret string
		return ret
	}
	return *o.RequestTemplateId
}

// GetRequestTemplateIdOk returns a tuple with the RequestTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRequestTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestTemplateId) {
		return nil, false
	}
	return o.RequestTemplateId, true
}

// HasRequestTemplateId returns a boolean if a field has been set.
func (o *Resource) HasRequestTemplateId() bool {
	if o != nil && !IsNil(o.RequestTemplateId) {
		return true
	}

	return false
}

// SetRequestTemplateId gets a reference to the given string and assigns it to the RequestTemplateId field.
func (o *Resource) SetRequestTemplateId(v string) {
	o.RequestTemplateId = &v
}

// GetIsRequestable returns the IsRequestable field value if set, zero value otherwise.
func (o *Resource) GetIsRequestable() bool {
	if o == nil || IsNil(o.IsRequestable) {
		var ret bool
		return ret
	}
	return *o.IsRequestable
}

// GetIsRequestableOk returns a tuple with the IsRequestable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetIsRequestableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRequestable) {
		return nil, false
	}
	return o.IsRequestable, true
}

// HasIsRequestable returns a boolean if a field has been set.
func (o *Resource) HasIsRequestable() bool {
	if o != nil && !IsNil(o.IsRequestable) {
		return true
	}

	return false
}

// SetIsRequestable gets a reference to the given bool and assigns it to the IsRequestable field.
func (o *Resource) SetIsRequestable(v bool) {
	o.IsRequestable = &v
}

// GetParentResourceId returns the ParentResourceId field value if set, zero value otherwise.
func (o *Resource) GetParentResourceId() string {
	if o == nil || IsNil(o.ParentResourceId) {
		var ret string
		return ret
	}
	return *o.ParentResourceId
}

// GetParentResourceIdOk returns a tuple with the ParentResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetParentResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentResourceId) {
		return nil, false
	}
	return o.ParentResourceId, true
}

// HasParentResourceId returns a boolean if a field has been set.
func (o *Resource) HasParentResourceId() bool {
	if o != nil && !IsNil(o.ParentResourceId) {
		return true
	}

	return false
}

// SetParentResourceId gets a reference to the given string and assigns it to the ParentResourceId field.
func (o *Resource) SetParentResourceId(v string) {
	o.ParentResourceId = &v
}

// GetConfigurationTemplateId returns the ConfigurationTemplateId field value if set, zero value otherwise.
func (o *Resource) GetConfigurationTemplateId() string {
	if o == nil || IsNil(o.ConfigurationTemplateId) {
		var ret string
		return ret
	}
	return *o.ConfigurationTemplateId
}

// GetConfigurationTemplateIdOk returns a tuple with the ConfigurationTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetConfigurationTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationTemplateId) {
		return nil, false
	}
	return o.ConfigurationTemplateId, true
}

// HasConfigurationTemplateId returns a boolean if a field has been set.
func (o *Resource) HasConfigurationTemplateId() bool {
	if o != nil && !IsNil(o.ConfigurationTemplateId) {
		return true
	}

	return false
}

// SetConfigurationTemplateId gets a reference to the given string and assigns it to the ConfigurationTemplateId field.
func (o *Resource) SetConfigurationTemplateId(v string) {
	o.ConfigurationTemplateId = &v
}

// GetRequestConfigurations returns the RequestConfigurations field value if set, zero value otherwise.
func (o *Resource) GetRequestConfigurations() []RequestConfiguration {
	if o == nil || IsNil(o.RequestConfigurations) {
		var ret []RequestConfiguration
		return ret
	}
	return o.RequestConfigurations
}

// GetRequestConfigurationsOk returns a tuple with the RequestConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRequestConfigurationsOk() ([]RequestConfiguration, bool) {
	if o == nil || IsNil(o.RequestConfigurations) {
		return nil, false
	}
	return o.RequestConfigurations, true
}

// HasRequestConfigurations returns a boolean if a field has been set.
func (o *Resource) HasRequestConfigurations() bool {
	if o != nil && !IsNil(o.RequestConfigurations) {
		return true
	}

	return false
}

// SetRequestConfigurations gets a reference to the given []RequestConfiguration and assigns it to the RequestConfigurations field.
func (o *Resource) SetRequestConfigurations(v []RequestConfiguration) {
	o.RequestConfigurations = v
}

// GetRequestConfigurationList returns the RequestConfigurationList field value if set, zero value otherwise.
func (o *Resource) GetRequestConfigurationList() []RequestConfiguration {
	if o == nil || IsNil(o.RequestConfigurationList) {
		var ret []RequestConfiguration
		return ret
	}
	return o.RequestConfigurationList
}

// GetRequestConfigurationListOk returns a tuple with the RequestConfigurationList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRequestConfigurationListOk() ([]RequestConfiguration, bool) {
	if o == nil || IsNil(o.RequestConfigurationList) {
		return nil, false
	}
	return o.RequestConfigurationList, true
}

// HasRequestConfigurationList returns a boolean if a field has been set.
func (o *Resource) HasRequestConfigurationList() bool {
	if o != nil && !IsNil(o.RequestConfigurationList) {
		return true
	}

	return false
}

// SetRequestConfigurationList gets a reference to the given []RequestConfiguration and assigns it to the RequestConfigurationList field.
func (o *Resource) SetRequestConfigurationList(v []RequestConfiguration) {
	o.RequestConfigurationList = v
}

// GetTicketPropagation returns the TicketPropagation field value if set, zero value otherwise.
func (o *Resource) GetTicketPropagation() TicketPropagationConfiguration {
	if o == nil || IsNil(o.TicketPropagation) {
		var ret TicketPropagationConfiguration
		return ret
	}
	return *o.TicketPropagation
}

// GetTicketPropagationOk returns a tuple with the TicketPropagation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetTicketPropagationOk() (*TicketPropagationConfiguration, bool) {
	if o == nil || IsNil(o.TicketPropagation) {
		return nil, false
	}
	return o.TicketPropagation, true
}

// HasTicketPropagation returns a boolean if a field has been set.
func (o *Resource) HasTicketPropagation() bool {
	if o != nil && !IsNil(o.TicketPropagation) {
		return true
	}

	return false
}

// SetTicketPropagation gets a reference to the given TicketPropagationConfiguration and assigns it to the TicketPropagation field.
func (o *Resource) SetTicketPropagation(v TicketPropagationConfiguration) {
	o.TicketPropagation = &v
}

// GetCustomRequestNotification returns the CustomRequestNotification field value if set, zero value otherwise.
func (o *Resource) GetCustomRequestNotification() string {
	if o == nil || IsNil(o.CustomRequestNotification) {
		var ret string
		return ret
	}
	return *o.CustomRequestNotification
}

// GetCustomRequestNotificationOk returns a tuple with the CustomRequestNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetCustomRequestNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.CustomRequestNotification) {
		return nil, false
	}
	return o.CustomRequestNotification, true
}

// HasCustomRequestNotification returns a boolean if a field has been set.
func (o *Resource) HasCustomRequestNotification() bool {
	if o != nil && !IsNil(o.CustomRequestNotification) {
		return true
	}

	return false
}

// SetCustomRequestNotification gets a reference to the given string and assigns it to the CustomRequestNotification field.
func (o *Resource) SetCustomRequestNotification(v string) {
	o.CustomRequestNotification = &v
}

// GetRiskSensitivity returns the RiskSensitivity field value if set, zero value otherwise.
func (o *Resource) GetRiskSensitivity() RiskSensitivityEnum {
	if o == nil || IsNil(o.RiskSensitivity) {
		var ret RiskSensitivityEnum
		return ret
	}
	return *o.RiskSensitivity
}

// GetRiskSensitivityOk returns a tuple with the RiskSensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRiskSensitivityOk() (*RiskSensitivityEnum, bool) {
	if o == nil || IsNil(o.RiskSensitivity) {
		return nil, false
	}
	return o.RiskSensitivity, true
}

// HasRiskSensitivity returns a boolean if a field has been set.
func (o *Resource) HasRiskSensitivity() bool {
	if o != nil && !IsNil(o.RiskSensitivity) {
		return true
	}

	return false
}

// SetRiskSensitivity gets a reference to the given RiskSensitivityEnum and assigns it to the RiskSensitivity field.
func (o *Resource) SetRiskSensitivity(v RiskSensitivityEnum) {
	o.RiskSensitivity = &v
}

// GetRiskSensitivityOverride returns the RiskSensitivityOverride field value if set, zero value otherwise.
func (o *Resource) GetRiskSensitivityOverride() RiskSensitivityEnum {
	if o == nil || IsNil(o.RiskSensitivityOverride) {
		var ret RiskSensitivityEnum
		return ret
	}
	return *o.RiskSensitivityOverride
}

// GetRiskSensitivityOverrideOk returns a tuple with the RiskSensitivityOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRiskSensitivityOverrideOk() (*RiskSensitivityEnum, bool) {
	if o == nil || IsNil(o.RiskSensitivityOverride) {
		return nil, false
	}
	return o.RiskSensitivityOverride, true
}

// HasRiskSensitivityOverride returns a boolean if a field has been set.
func (o *Resource) HasRiskSensitivityOverride() bool {
	if o != nil && !IsNil(o.RiskSensitivityOverride) {
		return true
	}

	return false
}

// SetRiskSensitivityOverride gets a reference to the given RiskSensitivityEnum and assigns it to the RiskSensitivityOverride field.
func (o *Resource) SetRiskSensitivityOverride(v RiskSensitivityEnum) {
	o.RiskSensitivityOverride = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
// Deprecated
func (o *Resource) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Resource) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Resource) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
// Deprecated
func (o *Resource) SetMetadata(v string) {
	o.Metadata = &v
}

// GetRemoteInfo returns the RemoteInfo field value if set, zero value otherwise.
func (o *Resource) GetRemoteInfo() ResourceRemoteInfo {
	if o == nil || IsNil(o.RemoteInfo) {
		var ret ResourceRemoteInfo
		return ret
	}
	return *o.RemoteInfo
}

// GetRemoteInfoOk returns a tuple with the RemoteInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetRemoteInfoOk() (*ResourceRemoteInfo, bool) {
	if o == nil || IsNil(o.RemoteInfo) {
		return nil, false
	}
	return o.RemoteInfo, true
}

// HasRemoteInfo returns a boolean if a field has been set.
func (o *Resource) HasRemoteInfo() bool {
	if o != nil && !IsNil(o.RemoteInfo) {
		return true
	}

	return false
}

// SetRemoteInfo gets a reference to the given ResourceRemoteInfo and assigns it to the RemoteInfo field.
func (o *Resource) SetRemoteInfo(v ResourceRemoteInfo) {
	o.RemoteInfo = &v
}

// GetAncestorResourceIds returns the AncestorResourceIds field value if set, zero value otherwise.
func (o *Resource) GetAncestorResourceIds() []string {
	if o == nil || IsNil(o.AncestorResourceIds) {
		var ret []string
		return ret
	}
	return o.AncestorResourceIds
}

// GetAncestorResourceIdsOk returns a tuple with the AncestorResourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetAncestorResourceIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AncestorResourceIds) {
		return nil, false
	}
	return o.AncestorResourceIds, true
}

// HasAncestorResourceIds returns a boolean if a field has been set.
func (o *Resource) HasAncestorResourceIds() bool {
	if o != nil && !IsNil(o.AncestorResourceIds) {
		return true
	}

	return false
}

// SetAncestorResourceIds gets a reference to the given []string and assigns it to the AncestorResourceIds field.
func (o *Resource) SetAncestorResourceIds(v []string) {
	o.AncestorResourceIds = v
}

// GetDescendantResourceIds returns the DescendantResourceIds field value if set, zero value otherwise.
func (o *Resource) GetDescendantResourceIds() []string {
	if o == nil || IsNil(o.DescendantResourceIds) {
		var ret []string
		return ret
	}
	return o.DescendantResourceIds
}

// GetDescendantResourceIdsOk returns a tuple with the DescendantResourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetDescendantResourceIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DescendantResourceIds) {
		return nil, false
	}
	return o.DescendantResourceIds, true
}

// HasDescendantResourceIds returns a boolean if a field has been set.
func (o *Resource) HasDescendantResourceIds() bool {
	if o != nil && !IsNil(o.DescendantResourceIds) {
		return true
	}

	return false
}

// SetDescendantResourceIds gets a reference to the given []string and assigns it to the DescendantResourceIds field.
func (o *Resource) SetDescendantResourceIds(v []string) {
	o.DescendantResourceIds = v
}

// GetLastSuccessfulSync returns the LastSuccessfulSync field value if set, zero value otherwise.
func (o *Resource) GetLastSuccessfulSync() SyncTask {
	if o == nil || IsNil(o.LastSuccessfulSync) {
		var ret SyncTask
		return ret
	}
	return *o.LastSuccessfulSync
}

// GetLastSuccessfulSyncOk returns a tuple with the LastSuccessfulSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Resource) GetLastSuccessfulSyncOk() (*SyncTask, bool) {
	if o == nil || IsNil(o.LastSuccessfulSync) {
		return nil, false
	}
	return o.LastSuccessfulSync, true
}

// HasLastSuccessfulSync returns a boolean if a field has been set.
func (o *Resource) HasLastSuccessfulSync() bool {
	if o != nil && !IsNil(o.LastSuccessfulSync) {
		return true
	}

	return false
}

// SetLastSuccessfulSync gets a reference to the given SyncTask and assigns it to the LastSuccessfulSync field.
func (o *Resource) SetLastSuccessfulSync(v SyncTask) {
	o.LastSuccessfulSync = &v
}

func (o Resource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Resource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_id"] = o.ResourceId
	if !IsNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AdminOwnerId) {
		toSerialize["admin_owner_id"] = o.AdminOwnerId
	}
	if !IsNil(o.RemoteResourceId) {
		toSerialize["remote_resource_id"] = o.RemoteResourceId
	}
	if !IsNil(o.RemoteResourceName) {
		toSerialize["remote_resource_name"] = o.RemoteResourceName
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !IsNil(o.MaxDuration) {
		toSerialize["max_duration"] = o.MaxDuration
	}
	if !IsNil(o.RecommendedDuration) {
		toSerialize["recommended_duration"] = o.RecommendedDuration
	}
	if !IsNil(o.ExtensionsDurationInMinutes) {
		toSerialize["extensions_duration_in_minutes"] = o.ExtensionsDurationInMinutes
	}
	if !IsNil(o.RequireManagerApproval) {
		toSerialize["require_manager_approval"] = o.RequireManagerApproval
	}
	if !IsNil(o.RequireSupportTicket) {
		toSerialize["require_support_ticket"] = o.RequireSupportTicket
	}
	if !IsNil(o.RequireMfaToApprove) {
		toSerialize["require_mfa_to_approve"] = o.RequireMfaToApprove
	}
	if !IsNil(o.RequireMfaToRequest) {
		toSerialize["require_mfa_to_request"] = o.RequireMfaToRequest
	}
	if !IsNil(o.RequireMfaToConnect) {
		toSerialize["require_mfa_to_connect"] = o.RequireMfaToConnect
	}
	if !IsNil(o.AutoApproval) {
		toSerialize["auto_approval"] = o.AutoApproval
	}
	if !IsNil(o.RequestTemplateId) {
		toSerialize["request_template_id"] = o.RequestTemplateId
	}
	if !IsNil(o.IsRequestable) {
		toSerialize["is_requestable"] = o.IsRequestable
	}
	if !IsNil(o.ParentResourceId) {
		toSerialize["parent_resource_id"] = o.ParentResourceId
	}
	if !IsNil(o.ConfigurationTemplateId) {
		toSerialize["configuration_template_id"] = o.ConfigurationTemplateId
	}
	if !IsNil(o.RequestConfigurations) {
		toSerialize["request_configurations"] = o.RequestConfigurations
	}
	if !IsNil(o.RequestConfigurationList) {
		toSerialize["request_configuration_list"] = o.RequestConfigurationList
	}
	if !IsNil(o.TicketPropagation) {
		toSerialize["ticket_propagation"] = o.TicketPropagation
	}
	if !IsNil(o.CustomRequestNotification) {
		toSerialize["custom_request_notification"] = o.CustomRequestNotification
	}
	if !IsNil(o.RiskSensitivity) {
		toSerialize["risk_sensitivity"] = o.RiskSensitivity
	}
	if !IsNil(o.RiskSensitivityOverride) {
		toSerialize["risk_sensitivity_override"] = o.RiskSensitivityOverride
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.RemoteInfo) {
		toSerialize["remote_info"] = o.RemoteInfo
	}
	if !IsNil(o.AncestorResourceIds) {
		toSerialize["ancestor_resource_ids"] = o.AncestorResourceIds
	}
	if !IsNil(o.DescendantResourceIds) {
		toSerialize["descendant_resource_ids"] = o.DescendantResourceIds
	}
	if !IsNil(o.LastSuccessfulSync) {
		toSerialize["last_successful_sync"] = o.LastSuccessfulSync
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Resource) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resource_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResource := _Resource{}

	err = json.Unmarshal(data, &varResource)

	if err != nil {
		return err
	}

	*o = Resource(varResource)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "resource_id")
		delete(additionalProperties, "app_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "admin_owner_id")
		delete(additionalProperties, "remote_resource_id")
		delete(additionalProperties, "remote_resource_name")
		delete(additionalProperties, "resource_type")
		delete(additionalProperties, "max_duration")
		delete(additionalProperties, "recommended_duration")
		delete(additionalProperties, "extensions_duration_in_minutes")
		delete(additionalProperties, "require_manager_approval")
		delete(additionalProperties, "require_support_ticket")
		delete(additionalProperties, "require_mfa_to_approve")
		delete(additionalProperties, "require_mfa_to_request")
		delete(additionalProperties, "require_mfa_to_connect")
		delete(additionalProperties, "auto_approval")
		delete(additionalProperties, "request_template_id")
		delete(additionalProperties, "is_requestable")
		delete(additionalProperties, "parent_resource_id")
		delete(additionalProperties, "configuration_template_id")
		delete(additionalProperties, "request_configurations")
		delete(additionalProperties, "request_configuration_list")
		delete(additionalProperties, "ticket_propagation")
		delete(additionalProperties, "custom_request_notification")
		delete(additionalProperties, "risk_sensitivity")
		delete(additionalProperties, "risk_sensitivity_override")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "remote_info")
		delete(additionalProperties, "ancestor_resource_ids")
		delete(additionalProperties, "descendant_resource_ids")
		delete(additionalProperties, "last_successful_sync")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResource struct {
	value *Resource
	isSet bool
}

func (v NullableResource) Get() *Resource {
	return v.value
}

func (v *NullableResource) Set(val *Resource) {
	v.value = val
	v.isSet = true
}

func (v NullableResource) IsSet() bool {
	return v.isSet
}

func (v *NullableResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResource(val *Resource) *NullableResource {
	return &NullableResource{value: val, isSet: true}
}

func (v NullableResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


